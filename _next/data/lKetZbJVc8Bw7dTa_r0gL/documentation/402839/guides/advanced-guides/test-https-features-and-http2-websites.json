{"pageProps":{"content":{"html":"        <h1>Test HTTPS Features and HTTP/2 Websites</h1>\r\n\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p><a class=\"xref\" href=\"/documentation/404237/guides/intermediate-guides/native-automation-mode\">Native Automation mode</a> supports HTTPS and HTTP/2 websites out of the box. Refer to this guide to set up HTTPS testing with the TestCafe proxy.</p>\r\n</div>\r\n<ul>\r\n<li><a href=\"#check-ssl-certificate-validity\">Check SSL certificate validity</a></li>\r\n<li><a href=\"#test-https-websites\">Test HTTPS Websites</a><ul>\r\n<li><a href=\"#use-a-trusted-certificate\">Use a Trusted Certificate</a></li>\r\n<li><a href=\"#use-a-self-signed-certificate\">Use a Self-Signed Certificate</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#test-http2-websites\">Test HTTP/2 Websites</a></li>\r\n</ul>\r\n<h2 id=\"check-ssl-certificate-validity__$\"><a class=\"anchor-fix\" href=\"#check-ssl-certificate-validity\" id=\"check-ssl-certificate-validity\"></a>Check SSL certificate validity<a class=\"anchor-hash\" href=\"#check-ssl-certificate-validity\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>The TestCafe proxy can automate websites that use invalid SSL certificates. This behavior takes place because the browser does not have <em>direct</em> website access. If you enable <a class=\"xref\" href=\"/documentation/404237/guides/intermediate-guides/native-automation-mode\">native automation</a>, the browser inspects SSL certificates, and displays a warning screen in case of an error. </p>\r\n<h2 id=\"test-https-websites__$\"><a class=\"anchor-fix\" href=\"#test-https-websites\" id=\"test-https-websites\"></a>Test HTTPS Websites<a class=\"anchor-hash\" href=\"#test-https-websites\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>The TestCafe <a href=\"https://en.wikipedia.org/wiki/Reverse_proxy\" target=\"_blank\">reverse proxy<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> serves web pages over HTTP and communicates with the original web server over HTTP or HTTPS (depending on the <a class=\"xref\" href=\"/documentation/402778/reference/test-api/fixture/page\">page URL</a>).</p>\r\n<p><img src=\"/images/proxy-connection-protocols.svg\" alt=\"Connection Protocols\"></p>\r\n<p>If the application does not use HTTPS-specific features (like\r\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\" target=\"_blank\">Service Workers<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>,\r\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API\" target=\"_blank\">Geolocation API<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>,\r\n<a href=\"https://developer.apple.com/documentation/apple_pay_on_the_web/applepaysession\" target=\"_blank\">ApplePaySession<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, or\r\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto\" target=\"_blank\">SubtleCrypto<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>), TestCafe can proxy it over HTTP. Otherwise, the tests fail because the page throws JavaScript errors, does not load or loads partially.</p>\r\n<p>To establish a secure HTTPS-connection, Node.js requires a valid <a href=\"https://en.wikipedia.org/wiki/PKCS_12\" target=\"_blank\">PKCS12<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> certificate (<code>.pfx</code>). We recommend that you <a href=\"#use-a-trusted-certificate\">use a certificate signed by a trusted authority</a>. This allows a browser to open the tested page without workarounds. You can also <a href=\"#use-a-self-signed-certificate\">generate and use a self-signed certificate</a>.</p>\r\n<div class=\"TIP\"><p class=\"alert-title\">Tip</p><p>Before you use HTTPS, launch testcafe with <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--hostname-name\"><strong>--hostname localhost</strong> CLI parameter</a> or <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#hostname\"><strong>hostname: localhost</strong> configuration option</a>.</p>\r\n<p>Most modern browsers treat localhost as a secure origin, and some built-in browser features that require a secure origin (Service workers, GeoAPI) should work.</p>\r\n<p>Third-party JS features like ApplePaySession may not work depending on implementation.</p>\r\n</div>\r\n<h3 id=\"use-a-trusted-certificate__$\"><a class=\"anchor-fix\" href=\"#use-a-trusted-certificate\" id=\"use-a-trusted-certificate\"></a>Use a Trusted Certificate<a class=\"anchor-hash\" href=\"#use-a-trusted-certificate\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>To specify a certificate when you launch TestCafe with <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">CLI</a>, use <a class=\"xref api-link\" href=\"/documentation/402639/reference/command-line-interface#--ssl-options\">-ssl</a> option:</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome  test.js --ssl pfx=path/to/trusted/certificate.pfx;rejectUnauthorized=true;\r\n</code></pre><h3 id=\"use-a-self-signed-certificate__$\"><a class=\"anchor-fix\" href=\"#use-a-self-signed-certificate\" id=\"use-a-self-signed-certificate\"></a>Use a Self-Signed Certificate<a class=\"anchor-hash\" href=\"#use-a-self-signed-certificate\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p><a href=\"#generate-a-certificate-from-the-command-line\">Generate a self-signed certificate with openssl</a> if you launch tests from the command line. To <a href=\"#generate-a-certificate-in-your-code\">generate a certificate in code</a>, use the <code>openssl-self-signed-certificate</code> module.</p>\r\n<h4 id=\"generate-a-certificate-from-the-command-line__$\"><a class=\"anchor-fix\" href=\"#generate-a-certificate-from-the-command-line\" id=\"generate-a-certificate-from-the-command-line\"></a>Generate a Certificate From the Command Line<a class=\"anchor-hash\" href=\"#generate-a-certificate-from-the-command-line\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>In <strong>bash</strong>, you can use <a href=\"https://www.openssl.org/docs/man1.1.1/man1/openssl-req.html\" target=\"_blank\">OpenSSL<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> to generate a certificate chain.</p>\r\n<ol>\r\n<li><p>Issue your own CA certificate and a CA-signed certificate for the web server:</p>\r\n<pre><code class=\"lang-sh\">openssl genrsa -des3 -out myCA.key 2048\r\n</code></pre><p> You will be prompted for a non-empty passphrase. Take note of it.  </p>\r\n</li>\r\n<li><p>Generate a root certificate:</p>\r\n<pre><code class=\"lang-sh\">openssl req -x509 -new -nodes -key myCA.key -sha256 -days 1825 -out myCA.pem\r\n</code></pre><p> You will be prompted for additional information, press Enter to skip the questions.</p>\r\n</li>\r\n<li><p>Create a CA-signed domain certificate and a <code>.csr</code> sign request:</p>\r\n<pre><code class=\"lang-sh\">openssl genrsa -out testingdomain.key 2048\r\nopenssl req -new -key testingdomain.key -out testingdomain.csr\r\n</code></pre><p> You can press Enter to skip the questions, but set a recognizable CN (Common Name) so that you can easily find this certificate in a list of others later.  </p>\r\n</li>\r\n<li><p>Create a config file <code>testdomain.ext</code> with the following content:</p>\r\n<pre><code class=\"lang-sh\">authorityKeyIdentifier=keyid,issuer\r\nbasicConstraints=CA:FALSE\r\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\r\nsubjectAltName = @alt_names\r\n\r\n[alt_names]\r\nDNS.1 = localhost\r\n</code></pre></li>\r\n<li><p>Now create the certificate from the <code>.csr</code> request, the CA private key (<code>myCA.key</code>), the CA certificate (<code>myCA.pem</code>), and a config file(<code>testdomain.ext</code>):</p>\r\n<pre><code class=\"lang-sh\">openssl x509 -req -in testingdomain.csr -CA myCA.pem -CAkey myCA.key -CAcreateserial -out testingdomain.crt -days 825 -sha256 -extfile testdomain.ext\r\n</code></pre></li>\r\n<li><p>Finally, export the certificate to PKCS#12 <code>.pfx</code> format:</p>\r\n<pre><code class=\"lang-sh\">openssl pkcs12 -export -out testingdomain.pfx -inkey testingdomain.key -in testingdomain.crt -certfile myCA.pem\r\n</code></pre></li>\r\n</ol>\r\n<p>In <strong>PowerShell</strong>, <a href=\"https://adamtheautomator.com/openssl-windows-10/#h-installing-openssl-with-powershell-and-chocolatey\" target=\"_blank\">install OpenSSL<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> and <a href=\"https://adamtheautomator.com/openssl-windows-10/\" target=\"_blank\">update the necessary environment variables<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. Afterwards, proceed with the instructions <a href=\"#generate-a-certificate-from-the-command-line\">above</a>.</p>\r\n<h5 id=\"run-tests__$\"><a class=\"anchor-fix\" href=\"#run-tests\" id=\"run-tests\"></a>Run Tests<a class=\"anchor-hash\" href=\"#run-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h5>\r\n<p>When you run tests from the command line, use <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ssl-options\">--ssl</a> flag to enable HTTPS on a proxy server. Specify options required to initialize <a href=\"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\" target=\"_blank\">a Node.js HTTPS server<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> after this flag in a semicolon-separated string. The most commonly used SSL options are described in the <a href=\"https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options\" target=\"_blank\">TLS topic<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> in the Node.js documentation.</p>\r\n<p>The examples below use a previously generated <code>.pfx</code> file to establish an HTTPS server.</p>\r\n<p>In <strong><em>Chrome</em></strong> and <strong><em>Chromium-Based</em></strong> Browsers, use the <code>--allow-insecure-localhost</code> flag and <a class=\"xref api-link\" href=\"/documentation/402639/reference/command-line-interface#--hostname-name\">--hostname</a> CLI parameter to make Chrome trust the certificate when tests are run on localhost. If you use a different URL, use the <code>--ignore-certificate-errors</code> flag.</p>\r\n<pre><code class=\"lang-sh\">testcafe &quot;chrome --allow-insecure-localhost&quot; --hostname localhost test.js --ssl pfx=path/to/certificate.pfx;rejectUnauthorized=true;\r\n</code></pre><p>In <strong><em>Firefox</em></strong>, add your self-signed root authority to the trusted list. Follow the steps:</p>\r\n<ol>\r\n<li><a href=\"https://support.mozilla.org/en-US/kb/profile-manager-create-remove-switch-firefox-profiles#w_creating-a-profile\" target=\"_blank\">Create a new profile<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> in Firefox settings;</li>\r\n<li><a href=\"https://support.mozilla.org/en-US/kb/profile-manager-create-remove-switch-firefox-profiles#w_manage-profiles-when-firefox-is-open\" target=\"_blank\">Run Firefox with this profile<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> and <a href=\"https://support.mozilla.org/en-US/questions/1059377\" target=\"_blank\">import the CA certificate<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> (<code>myCA.pem</code>) you generated previously. Ensure the <strong>This certificate can identify websites</strong> checkbox is checked;</li>\r\n<li>Load this new profile when TestCafe launches Firefox. To do this, add <code>-P &lt;profile_name&gt;</code> to the browser’s command line arguments.</li>\r\n</ol>\r\n<pre><code class=\"lang-sh\">testcafe &#39;firefox -P testing-profile&#39; --hostname localhost assertTest.js --ssl pfx=certificate.pfx;rejectUnauthorized=true;\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>The certificate created in the example is valid only for localhost domain. This is why the <code>--hostname</code> option is used. If you want to use another domain for testing, enter it in the <code>[alt_names]</code> section of <code>testdomain.ext</code> configuration file before creating the certificate.  </p>\r\n</div>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>For security reasons, only use this profile for testing purposes.</p>\r\n</div>\r\n<h4 id=\"generate-a-certificate-in-your-code__$\"><a class=\"anchor-fix\" href=\"#generate-a-certificate-in-your-code\" id=\"generate-a-certificate-in-your-code\"></a>Generate a Certificate in Your Code<a class=\"anchor-hash\" href=\"#generate-a-certificate-in-your-code\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>When you use the programming interface, generate a certificate with the <a href=\"https://www.npmjs.com/package/openssl-self-signed-certificate\" target=\"_blank\">openssl-self-signed-certificate<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> module and pass the HTTPS server options to the <a class=\"xref\" href=\"/documentation/402662/reference/testcafe-api/global/createtestcafe\">createTestCafe</a> function.</p>\r\n<pre><code class=\"lang-js\">const createTestCafe        = require(&#39;testcafe&#39;);\r\nconst selfSignedSertificate = require(&#39;openssl-self-signed-certificate&#39;);\r\n\r\nconst sslOptions = {\r\n    key:  selfSignedSertificate.key,\r\n    cert: selfSignedSertificate.cert\r\n};\r\n\r\nconst testcafe = await createTestCafe(&#39;localhost&#39;, 1337, 1338, sslOptions);\r\nconst runner   = testcafe.createRunner();\r\n\r\nawait runner\r\n    .src(&#39;test.js&#39;)\r\n\r\n    // Browsers restrict self-signed certificate usage unless you\r\n    // explicitly set a flag specific to each browser.\r\n    // For Chrome, this is &#39;--allow-insecure-localhost&#39;.\r\n    .browsers(&#39;chrome --allow-insecure-localhost&#39;)\r\n    .run();\r\n\r\nawait testcafe.close();\r\n</code></pre><h2 id=\"test-http2-websites__$\"><a class=\"anchor-fix\" href=\"#test-http2-websites\" id=\"test-http2-websites\"></a>Test HTTP/2 Websites<a class=\"anchor-hash\" href=\"#test-http2-websites\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>TestCafe can test an HTTP/2 website only if the server can downgrade the connection to HTTPS or HTTP/1. See <a href=\"https://nodejs.org/api/http2.html#http2_alpn_negotiation\" target=\"_blank\">ALPN negotiation<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> for details.</p>\r\n","headers":[{"title":"Check SSL certificate validity","tagName":"h2","id":"check-ssl-certificate-validity","lvl":2},{"title":"Test HTTPS Websites","tagName":"h2","id":"test-https-websites","lvl":2},{"title":"Test HTTP/2 Websites","tagName":"h2","id":"test-http2-websites","lvl":2}],"title":"Test HTTPS Features and HTTP/2 Websites","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402839","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}