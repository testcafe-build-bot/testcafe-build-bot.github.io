{"pageProps":{"content":{"html":"        <h1>Inject Client Scripts</h1>\r\n\r\n<p>TestCafe allows you to inject custom client scripts into pages visited during the tests. You can add scripts that mock browser API or provide helper functions.</p>\r\n<ul>\r\n<li><a href=\"#add-client-scripts-to-all-tests\">Add Client Scripts to All Tests</a></li>\r\n<li><a href=\"#add-client-scripts-to-specific-tests\">Add Client Scripts to Specific Tests</a></li>\r\n<li><a href=\"#provide-scripts-to-inject\">Provide Scripts to Inject</a><ul>\r\n<li><a href=\"#inject-a-javascript-file\">Inject a JavaScript File</a></li>\r\n<li><a href=\"#inject-a-module\">Inject a Module</a></li>\r\n<li><a href=\"#inject-script-code\">Inject Script Code</a></li>\r\n<li><a href=\"#provide-scripts-for-specific-pages\">Provide Scripts for Specific Pages</a></li>\r\n<li><a href=\"#inject-scripts-into-iframes\">Inject Scripts Into Iframes</a></li>\r\n<li><a href=\"#specify-multiple-scripts\">Specify Multiple Scripts</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#access-dom-in-the-injected-scripts\">Access DOM in the Injected Scripts</a></li>\r\n</ul>\r\n<p>Use <a href=\"#add-client-scripts-to-all-tests\">test run options</a> to add client scripts to all tests, or <a href=\"#add-client-scripts-to-specific-tests\">test API</a> to add them to individual fixtures or tests.</p>\r\n<h2 id=\"add-client-scripts-to-all-tests__$\"><a class=\"anchor-fix\" href=\"#add-client-scripts-to-all-tests\" id=\"add-client-scripts-to-all-tests\"></a>Add Client Scripts to All Tests<a class=\"anchor-hash\" href=\"#add-client-scripts-to-all-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Use either of the following options to inject scripts into pages visited during all the tests:</p>\r\n<ul>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--cs-pathpath2---client-scripts-pathpath2\">--cs (--client-scripts)</a> command line option</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome test.js --client-scripts mockDate.js,assets/react-helpers.js\r\n</code></pre></li>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts\">runner.clientScripts</a> API method</p>\r\n<pre><code class=\"lang-js\">runner.clientScripts(&#39;mockDate.js&#39;, &#39;scripts/react-helpers.js&#39;);\r\n</code></pre></li>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">clientScripts</a> configuration file property</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: [&quot;mockDate.js&quot;, &quot;scripts/react-helpers.js&quot;]\r\n}\r\n</code></pre></li>\r\n</ul>\r\n<h2 id=\"add-client-scripts-to-specific-tests__$\"><a class=\"anchor-fix\" href=\"#add-client-scripts-to-specific-tests\" id=\"add-client-scripts-to-specific-tests\"></a>Add Client Scripts to Specific Tests<a class=\"anchor-hash\" href=\"#add-client-scripts-to-specific-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Use the <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts\">fixture.clientScripts</a> and <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts\">test.clientScripts</a> methods to inject scripts into pages visited during a test or fixture.</p>\r\n<pre><code class=\"lang-js\">fixture `My fixture`\r\n    .page `http://example.com`\r\n    .clientScripts(&#39;assets/jquery.js&#39;);\r\n</code></pre><pre><code class=\"lang-js\">test\r\n    (&#39;My test&#39;, async t =&gt; { /* ... */ })\r\n    .clientScripts({ module: &#39;async&#39; });\r\n</code></pre><h2 id=\"provide-scripts-to-inject__$\"><a class=\"anchor-fix\" href=\"#provide-scripts-to-inject\" id=\"provide-scripts-to-inject\"></a>Provide Scripts to Inject<a class=\"anchor-hash\" href=\"#provide-scripts-to-inject\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>You can pass the following arguments to specify the scripts to inject:</p>\r\n<ul>\r\n<li><a href=\"#inject-a-javascript-file\">path to a JavaScript file</a></li>\r\n<li><a href=\"#inject-a-module\">module name</a></li>\r\n<li><a href=\"#inject-script-code\">script code</a></li>\r\n</ul>\r\n<p>You can also <a href=\"#provide-scripts-for-specific-pages\">inject scripts into specific pages</a> and <a href=\"#inject-scripts-into-iframes\">iframes</a>.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>The API methods and configuration options support <a href=\"#specify-multiple-scripts\">multiple arguments</a>.</p>\r\n</div>\r\n<h3 id=\"inject-a-javascript-file__$\"><a class=\"anchor-fix\" href=\"#inject-a-javascript-file\" id=\"inject-a-javascript-file\"></a>Inject a JavaScript File<a class=\"anchor-hash\" href=\"#inject-a-javascript-file\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specify the JavaScript file path to inject the content of this file into the tested pages. You can pass a string or object with the <code>path</code> property.</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome my-tests --cs assets/jquery.js\r\n</code></pre><pre><code class=\"lang-js\">runner.clientScripts(&#39;assets/jquery.js&#39;);\r\n</code></pre><pre><code class=\"lang-js\">{\r\n    &quot;clientScripts&quot;: &quot;assets/jquery.js&quot;\r\n}\r\n</code></pre><p>See the details for:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--cs-pathpath2---client-scripts-pathpath2\">command line interface</a>,</li>\r\n<li><a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts#inject-a-javascript-file\">programming interface</a>,</li>\r\n<li><a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">configuration file</a>,</li>\r\n<li>test API: <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts#inject-a-javascript-file\">fixture.clientScripts</a>, <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts#inject-a-javascript-file\">test.clientScripts</a>.</li>\r\n</ul>\r\n<h3 id=\"inject-a-module__$\"><a class=\"anchor-fix\" href=\"#inject-a-module\" id=\"inject-a-module\"></a>Inject a Module<a class=\"anchor-hash\" href=\"#inject-a-module\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Specify the Node.js module’s name to inject its content into the tested pages. Use an object with the <code>module</code> property.</p>\r\n<pre><code class=\"lang-js\">fixture `My fixture`\r\n    .page `https://example.com`\r\n    .clientScripts({ module: &#39;lodash&#39; });\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;module&quot;: &quot;lodash&quot;\r\n    }\r\n}\r\n</code></pre><p>TestCafe uses Node.js mechanisms to search for the module’s entry point and injects its content into the tested page.</p>\r\n<p>Note that the browser must be able to execute the injected module. For example, modules that implement the <a href=\"https://github.com/umdjs/umd\" target=\"_blank\">UMD<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> API can run in most modern browsers.</p>\r\n<p>See details for:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts#inject-a-module\">programming interface</a>,</li>\r\n<li><a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">configuration file</a>,</li>\r\n<li>test API: <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts#inject-a-module\">fixture.clientScripts</a>, <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts#inject-a-module\">test.clientScripts</a>.</li>\r\n</ul>\r\n<h3 id=\"inject-script-code__$\"><a class=\"anchor-fix\" href=\"#inject-script-code\" id=\"inject-script-code\"></a>Inject Script Code<a class=\"anchor-hash\" href=\"#inject-script-code\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can pass an object with the <code>content</code> property to provide the injected script as a string.</p>\r\n<pre><code class=\"lang-js\">const mockDate = `\r\n    Date.prototype.getTime = function () {\r\n        return 42;\r\n    };\r\n`;\r\n\r\ntest\r\n    (&#39;My test&#39;, async t =&gt; { /* ... */ })\r\n    .clientScripts({ content: mockDate });\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;content&quot;: &quot;Date.prototype.getTime = () =&gt; 42;&quot;\r\n    }\r\n}\r\n</code></pre><p>See the details for:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts#inject-script-code\">programming interface</a>,</li>\r\n<li><a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">configuration file</a>,</li>\r\n<li>test API: <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts#inject-script-code\">fixture.clientScripts</a>, <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts#inject-script-code\">test.clientScripts</a>.</li>\r\n</ul>\r\n<h3 id=\"provide-scripts-for-specific-pages__$\"><a class=\"anchor-fix\" href=\"#provide-scripts-for-specific-pages\" id=\"provide-scripts-for-specific-pages\"></a>Provide Scripts for Specific Pages<a class=\"anchor-hash\" href=\"#provide-scripts-for-specific-pages\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can also specify pages into which a script should be injected. This will allow you to mock browser API on specified pages and use the default behavior everywhere else.</p>\r\n<p>To specify target pages for a script, add the <code>page</code> property to the object you pass to <code>clientScripts</code>.</p>\r\n<pre><code class=\"lang-js\">runner.clientScripts({\r\n    page: /\\/user\\/profile\\//,\r\n    path: &#39;dist/jquery.js&#39;\r\n});\r\n</code></pre><pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: {\r\n        &quot;page&quot;: &quot;https://myapp.com/page/&quot;,\r\n        &quot;content&quot;: &quot;Geolocation.prototype.getCurrentPosition = () =&gt; new Positon(0, 0);&quot;\r\n    }\r\n}\r\n</code></pre><p>See the details for:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402660/reference/testcafe-api/runner/clientscripts#provide-scripts-for-specific-pages\">programming interface</a>,</li>\r\n<li><a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">configuration file</a>,</li>\r\n<li>test API: <a class=\"xref\" href=\"/documentation/402783/reference/test-api/fixture/clientscripts#provide-scripts-for-specific-pages\">fixture.clientScripts</a>, <a class=\"xref\" href=\"/documentation/402737/reference/test-api/test/clientscripts#provide-scripts-for-specific-pages\">test.clientScripts</a>.</li>\r\n</ul>\r\n<h3 id=\"inject-scripts-into-iframes__$\"><a class=\"anchor-fix\" href=\"#inject-scripts-into-iframes\" id=\"inject-scripts-into-iframes\"></a>Inject Scripts Into Iframes<a class=\"anchor-hash\" href=\"#inject-scripts-into-iframes\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>To inject a script into an iframe, specify the iframe URL in the <a href=\"#provide-scripts-for-specific-pages\">page</a> property.</p>\r\n<pre><code class=\"lang-js\">runner.clientScripts({\r\n    path: &#39;scripts/helpers.js&#39;,\r\n    page: &#39;https://example.com/iframe/&#39;\r\n}));\r\n</code></pre><h3 id=\"specify-multiple-scripts__$\"><a class=\"anchor-fix\" href=\"#specify-multiple-scripts\" id=\"specify-multiple-scripts\"></a>Specify Multiple Scripts<a class=\"anchor-hash\" href=\"#specify-multiple-scripts\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can pass multiple arguments or an array to the <code>clientScripts</code> methods:</p>\r\n<pre><code class=\"lang-js\">fixture `My fixture`\r\n    .page `https://example.com`\r\n    .clientScripts(&#39;scripts/react-helpers.js&#39;, { content: &#39;Date.prototype.getTime = () =&gt; 42;&#39; });\r\n</code></pre><pre><code class=\"lang-js\">runner.clientScripts([&#39;scripts/react-helpers.js&#39;, &#39;dist/jquery.js&#39;]);\r\n</code></pre><p>The <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#client-scripts\">clientScripts</a> configuration file property can also take arrays:</p>\r\n<pre><code class=\"lang-json\">{\r\n    &quot;clientScripts&quot;: [&quot;vue-helpers.js&quot;, {\r\n        &quot;page&quot;: &quot;https://mycorp.com/login/&quot;,\r\n        &quot;module&quot;: &quot;lodash&quot;\r\n    }]\r\n}\r\n</code></pre><p>The <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--cs-pathpath2---client-scripts-pathpath2\">--cs (--client-scripts)</a> command line option supports multiple arguments as well:</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome test.js --client-scripts mockDate.js,assets/react-helpers.js\r\n</code></pre><p>Note that the <code>page</code>, <code>content</code> and <code>module</code> properties cannot take arrays. To inject multiple scripts into the same page, pass one argument for each script.</p>\r\n<pre><code class=\"lang-js\">const scripts = [&#39;test1.js&#39;, &#39;test2.js&#39;, &#39;test3.js&#39;];\r\n\r\nrunner.clientScripts(scripts.map(script =&gt; {\r\n    path: script,\r\n    page: &#39;http://example.com&#39;\r\n}));\r\n</code></pre><h2 id=\"access-dom-in-the-injected-scripts__$\"><a class=\"anchor-fix\" href=\"#access-dom-in-the-injected-scripts\" id=\"access-dom-in-the-injected-scripts\"></a>Access DOM in the Injected Scripts<a class=\"anchor-hash\" href=\"#access-dom-in-the-injected-scripts\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>TestCafe injects custom scripts into the <code>head</code> tag. These scripts are executed before the DOM is loaded.</p>\r\n<p>To access the DOM in these scripts, wait until the <code>DOMContentLoaded</code> event fires:</p>\r\n<pre><code class=\"lang-js\">const scriptContent = `\r\nwindow.addEventListener(&#39;DOMContentLoaded&#39;, function () {\r\n    document.body.style.backgroundColor = &#39;green&#39;;\r\n});\r\n`;\r\n\r\nfixture `My fixture`\r\n    .clientScripts({ content: scriptContent });\r\n</code></pre>","headers":[{"title":"Add Client Scripts to All Tests","tagName":"h2","id":"add-client-scripts-to-all-tests","lvl":2},{"title":"Add Client Scripts to Specific Tests","tagName":"h2","id":"add-client-scripts-to-specific-tests","lvl":2},{"title":"Provide Scripts to Inject","tagName":"h2","id":"provide-scripts-to-inject","lvl":2},{"title":"Access DOM in the Injected Scripts","tagName":"h2","id":"access-dom-in-the-injected-scripts","lvl":2}],"title":"Inject Client Scripts","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402843","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}