{"pageProps":{"content":{"html":"        <h1>Detect the Client Browser and Platform</h1>\r\n\r\n<p>TestCafe allows you to obtain information about the current user agent in test code. This data identifies the operating system, platform type, browser, engine, etc.</p>\r\n<p>Use the <a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser\">t.browser</a> property to access user agent data.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://example.com`;\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    if (t.browser.name !== &#39;Chrome&#39;)\r\n        await t.expect(Selector(&#39;div&#39;).withText(&#39;Browser not supported&#39;).visible).ok();\r\n});\r\n</code></pre><p><code>t.browser</code> exposes the following properties:</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Property</th>\r\n<th>Type</th>\r\n<th>Description</th>\r\n<th>Example</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#alias\">alias</a></td>\r\n<td>String</td>\r\n<td>The browser alias string specified when tests are launched.</td>\r\n<td><code>firefox:headless</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#name\">name</a></td>\r\n<td>String</td>\r\n<td>The browser name.</td>\r\n<td><code>Chrome</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#version\">version</a></td>\r\n<td>String</td>\r\n<td>The browser version.</td>\r\n<td><code>77.0.3865.120</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#platform\">platform</a></td>\r\n<td>String</td>\r\n<td>The platform type.</td>\r\n<td><code>desktop</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#headless\">headless</a></td>\r\n<td>Boolean</td>\r\n<td><code>true</code> if the browser runs in headless mode.</td>\r\n<td><code>false</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#os\">os</a></td>\r\n<td>Object</td>\r\n<td>The name and version of the operating system.</td>\r\n<td><code>{ name: &#39;macOS&#39;, version: &#39;10.15.1&#39; }</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#engine\">engine</a></td>\r\n<td>Object</td>\r\n<td>The name and version of the browser engine.</td>\r\n<td><code>{ name: &#39;Gecko&#39;, version: &#39;20100101&#39; }</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#useragent\">userAgent</a></td>\r\n<td>String</td>\r\n<td>The user agent string.</td>\r\n<td><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/77.0.3865.120 Safari/537.36</code></td>\r\n</tr>\r\n<tr>\r\n<td><a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#prettyuseragent\">prettyUserAgent</a></td>\r\n<td>String</td>\r\n<td>Formatted string with the browser and operating system’s name and version.</td>\r\n<td><code>Chrome 77.0.3865.75 / macOS 10.14.0</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"examples__$\"><a class=\"anchor-fix\" href=\"#examples\" id=\"examples\"></a>Examples<a class=\"anchor-hash\" href=\"#examples\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<h3 id=\"create-a-browser-specific-hook__$\"><a class=\"anchor-fix\" href=\"#create-a-browser-specific-hook\" id=\"create-a-browser-specific-hook\"></a>Create a Browser-Specific Hook<a class=\"anchor-hash\" href=\"#create-a-browser-specific-hook\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The following example shows how to create a <a class=\"xref\" href=\"/documentation/403435/guides/intermediate-guides/hooks\">beforeEach</a> hook that runs for particular <a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#engine\">browser engines</a> only:</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://example.com`\r\n    .beforeEach(async t =&gt; {\r\n        if (t.browser.engine.name === &#39;Blink&#39;)\r\n            return;\r\n\r\n        // ...\r\n    });\r\n</code></pre><h3 id=\"generate-the-screenshot-file-path__$\"><a class=\"anchor-fix\" href=\"#generate-the-screenshot-file-path\" id=\"generate-the-screenshot-file-path\"></a>Generate the Screenshot File Path<a class=\"anchor-hash\" href=\"#generate-the-screenshot-file-path\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>This example shows how to generate the screenshot path based on the <a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#name\">browser name</a>. This prevents screenshots taken with <a class=\"xref\" href=\"/documentation/402676/reference/test-api/testcontroller/takeelementscreenshot\">t.takeElementScreenshot</a> in different browsers from being overwritten.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://example.com`;\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    const loginButton = Selector(&#39;div&#39;).withText(&#39;Login&#39;);\r\n\r\n    await t.takeElementScreenshot(loginButton, `auth/${t.browser.name}/login-button.png`);\r\n});\r\n</code></pre><h3 id=\"verify-the-installer-version__$\"><a class=\"anchor-fix\" href=\"#verify-the-installer-version\" id=\"verify-the-installer-version\"></a>Verify the Installer Version<a class=\"anchor-hash\" href=\"#verify-the-installer-version\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The following example verifies that the website detects the user’s platform and offers to download the right installer. This test uses the <a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#os\">t.browser.os.name</a> property to determine the operating system and check the installer name.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://example.com`;\r\n\r\nconst downloadButton = Selector(&#39;a&#39;).withText(&#39;Download&#39;);\r\n\r\ntest(&#39;Check the installer platform&#39;, async t =&gt; {\r\n    let installerName;\r\n\r\n    switch (t.browser.os.name) {\r\n        case &#39;Windows&#39;:\r\n            installerName = &#39;myapp-win.exe&#39;;\r\n            break;\r\n        case &#39;macOS&#39;:\r\n            installerName = &#39;myapp-mac.dmg&#39;;\r\n            break;\r\n        default:\r\n            installerName = &#39;myapp-linux.tar.gz&#39;;\r\n            break;\r\n    }\r\n\r\n    await t.expect(downloadButton.getAttribute(&#39;href&#39;)).contains(installerName);\r\n});\r\n</code></pre><h3 id=\"handle-ads-on-mobile-devices__$\"><a class=\"anchor-fix\" href=\"#handle-ads-on-mobile-devices\" id=\"handle-ads-on-mobile-devices\"></a>Handle Ads on Mobile Devices<a class=\"anchor-hash\" href=\"#handle-ads-on-mobile-devices\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The following example uses the <a class=\"xref\" href=\"/documentation/402712/reference/test-api/testcontroller/browser#platform\">t.browser.platform</a> property to determine the platform and <a class=\"xref\" href=\"/documentation/402842/guides/intermediate-guides/intercept-http-requests#attach-hooks-to-tests-and-fixtures\">attach</a> a <a class=\"xref\" href=\"/documentation/402842/guides/intermediate-guides/intercept-http-requests#mock-http-requests\">request mock</a> that blocks ad requests if the test runs on a mobile device.</p>\r\n<pre><code class=\"lang-js\">import { RequestMock } from &#39;testcafe&#39;;\r\n\r\nconst mobileAdMock = RequestMock()\r\n    .onRequestTo(/bannernetwork.com/)\r\n    .respond((req, res) =&gt; { res.statusCode = &#39;404&#39;; });\r\n\r\nfixture `My fixture`\r\n    .beforeEach(async t =&gt; {\r\n        if (t.browser.platform === &#39;mobile&#39;)\r\n            await t.addRequestHooks(mobileAdMock);\r\n\r\n        await t.navigateTo(&#39;https://mysite.com/tested/page/&#39;);\r\n    });\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    // ...\r\n});\r\n</code></pre>","headers":[{"title":"Examples","tagName":"h2","id":"examples","lvl":2}],"title":"Detect the Client Browser and Platform","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402844","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}