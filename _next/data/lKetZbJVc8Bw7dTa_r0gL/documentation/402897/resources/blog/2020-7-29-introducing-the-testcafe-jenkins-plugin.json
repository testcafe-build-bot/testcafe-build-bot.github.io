{"pageProps":{"content":{"html":"        <h1>Introducing the TestCafe Jenkins Plugin</h1>\r\n\r\n\r\n<p>TestCafe can capture videos and screenshots so you can debug your tests and examine page UI. You can record all tests or only those that failed, generate unique video files for each test or record all of them in one take, and single out specific interactions. (For a full list of available options, see the following help topic: <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos\">Screenshots and Videos</a>).</p>\r\n<p>Many TestCafe users take advantage of Jenkins — a CI/CD solution — to automate their tests. Until recently, they had to manually match the screenshots and videos taken by TestCafe to the individual test reports. The newly implemented <a href=\"https://plugins.jenkins.io/testcafe/\" target=\"_blank\">TestCafe Jenkins plugin<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> simplifies this process. Links to screenshots and videos taken during the test now automatically appear on the Jenkins test results page. There is no need to keep the testing server running — all required files are stored inside the Jenkins build folder.</p>\r\n\r\n<p>With our plugin enabled, the test results page should appear as follows:</p>\r\n<p><img src=\"/images/jenkins-plugin/test-results-page.png\" alt=\"The updated test results page\"></p>\r\n<h2 id=\"test-case-the-disappearing-button__$\"><a class=\"anchor-fix\" href=\"#test-case-the-disappearing-button\" id=\"test-case-the-disappearing-button\"></a>Test case: the disappearing button<a class=\"anchor-hash\" href=\"#test-case-the-disappearing-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Let’s assume that the ‘Add to Cart’ button disappears on the mobile version of your website.</p>\r\n<p><img src=\"/images/jenkins-plugin/button-example.png\" alt=\"The 'Add To Cart' button is absent from the mobile version of the website\"></p>\r\n<p>TestCafe supports the following mobile device emulation methods:</p>\r\n<ul>\r\n<li><a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions#resize-windows\">Resize the browser window</a> during the test</li>\r\n<li>Run the test through a <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#cloud-testing-services\">third-party cloud testing service</a></li>\r\n<li>Use <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#simulate-devices-with-chromium\">Chromium’s built-in emulation mode</a></li>\r\n</ul>\r\n<p>The third option offers greater speed and stability. We describe it going forward and recommend that you use it if possible.</p>\r\n<p>First, let’s write a simple test that checks if the ‘Add to Cart’ button exists:</p>\r\n<pre><code class=\"lang-JavaScript\">test(&#39;`Add To Cart` button should exist&#39;, async t =&gt; {\r\n    await t\r\n        .expect(Selector(&#39;button&#39;).withText(&#39;Add To Cart&#39;).visible).ok();\r\n});\r\n</code></pre><p>Now let’s configure Jenkins to launch this test every time we build our project.</p>\r\n<h2 id=\"basic-setup__$\"><a class=\"anchor-fix\" href=\"#basic-setup\" id=\"basic-setup\"></a>Basic setup<a class=\"anchor-hash\" href=\"#basic-setup\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<h3 id=\"step-1-install-prerequisites__$\"><a class=\"anchor-fix\" href=\"#step-1-install-prerequisites\" id=\"step-1-install-prerequisites\"></a>Step 1. Install prerequisites<a class=\"anchor-hash\" href=\"#step-1-install-prerequisites\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>TestCafe requires a working Node.js installation to run. If your testing environment does not contain node.js, <a href=\"https://plugins.jenkins.io/nodejs/\" target=\"_blank\">the Node.js Jenkins plugin<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> can install it for you. Also ensure that Chromium is installed: TestCafe cannot function without a browser.</p>\r\n<h3 id=\"step-2-install-the-testcafe-jenkins-plugin__$\"><a class=\"anchor-fix\" href=\"#step-2-install-the-testcafe-jenkins-plugin\" id=\"step-2-install-the-testcafe-jenkins-plugin\"></a>Step 2. Install the TestCafe Jenkins plugin<a class=\"anchor-hash\" href=\"#step-2-install-the-testcafe-jenkins-plugin\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>To install the TestCafe Jenkins plugin, click the “Manage Plugins” link on the Manage Jenkins page, select the “Available” tab, and enter “testcafe” into the search field. Check the box next to our plugin and click the ‘Install without restart’ button below it.</p>\r\n<p><img src=\"/images/jenkins-plugin/plugin-search-ui.png\" alt=\"Jenkins plugin search UI\"></p>\r\n<h3 id=\"step-3-install-the-required-node-packages__$\"><a class=\"anchor-fix\" href=\"#step-3-install-the-required-node-packages\" id=\"step-3-install-the-required-node-packages\"></a>Step 3. Install the required Node packages<a class=\"anchor-hash\" href=\"#step-3-install-the-required-node-packages\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Add the following <em>build step</em> to your Jenkins project:</p>\r\n<pre><code class=\"lang-bash\">npm i testcafe testcafe-reporter-jenkins\r\n</code></pre><p>This command installs the main testcafe library, as well as the <a href=\"https://www.npmjs.com/package/testcafe-reporter-jenkins\" target=\"_blank\">testcafe-reporter-jenkins<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> package. The latter is needed to generate Jenkins-friendly JUnit format reports.</p>\r\n<h3 id=\"step-4-configure-the-tests__$\"><a class=\"anchor-fix\" href=\"#step-4-configure-the-tests\" id=\"step-4-configure-the-tests\"></a>Step 4. Configure the tests<a class=\"anchor-hash\" href=\"#step-4-configure-the-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can configure your tests via:</p>\r\n<ul>\r\n<li>the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">command line interface</a></li>\r\n<li>the JavaScript/TypeScript API</li>\r\n<li>the .testcaferc.json <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file\">configuration file</a></li>\r\n</ul>\r\n<p>The last option provides an easy, declarative way to define your test settings. You can store this file in the same folder as your tests. Below is the configuration used in this tutorial:</p>\r\n<pre><code class=\"lang-js\">{\r\n    &quot;browsers&quot;: [\r\n        &quot;chromium:headless:emulation:device=iPhone 4&quot;,\r\n        &quot;chromium:headless:emulation:device=iPad Mini&quot;,\r\n        &quot;chromium:headless&quot;\r\n    ],\r\n    &quot;src&quot;: &quot;test/e2e/**/*&quot;,\r\n    &quot;screenshots&quot;: {\r\n        &quot;takeOnFails&quot;: true,\r\n        &quot;fullPage&quot;: true\r\n    },\r\n    &quot;videoPath&quot;: &quot;videos&quot;,\r\n    &quot;reporter&quot;: {\r\n        &quot;name&quot;: &quot;jenkins&quot;,\r\n        &quot;output&quot;: &quot;report.xml&quot;\r\n    },\r\n    &quot;appCommand&quot;: &quot;node server.js&quot;\r\n}\r\n</code></pre><p>The <em>Browser</em> array contains the list of browsers TestCafe will use to run our test. The <a class=\"xref\" href=\"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation#simulate-devices-with-chromium\">TestCafe browser syntax</a> allows us to specify the mobile devices we want Chromium to emulate.</p>\r\n<p>The <em>name</em> property of the <em>reporter</em> object is set as <em>jenkins</em>, which ensures that the reports generated by TestCafe can be properly parsed by the server.</p>\r\n<p>If you decide not to use a config file, be sure to <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-r-nameoutput---reporter-nameoutput\">manually set</a> the report format when you launch the tests as follows:</p>\r\n<pre><code class=\"lang-bash\">testcafe chrome test.js -r jenkins:report.xml\r\n</code></pre><p>Otherwise, simply run the following command:</p>\r\n<pre><code class=\"lang-bash\">npx testcafe\r\n</code></pre><h3 id=\"step-5-configure-the-reporter__$\"><a class=\"anchor-fix\" href=\"#step-5-configure-the-reporter\" id=\"step-5-configure-the-reporter\"></a>Step 5. Configure the reporter<a class=\"anchor-hash\" href=\"#step-5-configure-the-reporter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Turn on the <a href=\"https://plugins.jenkins.io/junit/\" target=\"_blank\">JUnit<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> reporter plugin: add the “Publish JUnit test result report” <em>post-build action</em>. To display screenshots and videos alongside your test results, select the “Include links to TestCafe artifacts” option from the “Additional test report features” drop-down menu.</p>\r\n<p>Important: Remember to check the “Retain long standard output/error” box. Otherwise, the reporter plugin will automatically truncate the URLs of your videos and screenshots.</p>\r\n<p><img src=\"/images/jenkins-plugin/junit-reporter-configuration.png\" alt=\"JUnit reporter configuration screen\"></p>\r\n<h3 id=\"step-6-run-the-build__$\"><a class=\"anchor-fix\" href=\"#step-6-run-the-build\" id=\"step-6-run-the-build\"></a>Step 6. Run the build<a class=\"anchor-hash\" href=\"#step-6-run-the-build\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Save the changes to your project and click the “Build now” button on the project page:</p>\r\n<p><img src=\"/images/jenkins-plugin/build-now-button.png\" alt=\"Jenkins Project menu with the Build Now Button highlighted\"></p>\r\n<h2 id=\"review-the-results__$\"><a class=\"anchor-fix\" href=\"#review-the-results\" id=\"review-the-results\"></a>Review the results<a class=\"anchor-hash\" href=\"#review-the-results\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>After the tests are completed, click the following link on the build page to view the results:</p>\r\n<p><img src=\"/images/jenkins-plugin/test-results-link.png\" alt=\"Test results link\"></p>\r\n<p>You will see links to screenshots and videos taken during the test.</p>\r\n<p><img src=\"/images/jenkins-plugin/test-results-view.png\" alt=\"Test results view\"></p>\r\n<p>These artifacts instantly indicate if the Cart button is present on the page.</p>\r\n<h2 id=\"jenkins-pipeline-integration__$\"><a class=\"anchor-fix\" href=\"#jenkins-pipeline-integration\" id=\"jenkins-pipeline-integration\"></a>Jenkins Pipeline integration<a class=\"anchor-hash\" href=\"#jenkins-pipeline-integration\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>If you do not wish to use the Jenkins GUI to launch these tests, you can always use the <a href=\"https://www.jenkins.io/doc/book/pipeline/\" target=\"_blank\">Jenkins Pipeline<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. It lets you declaratively configure your CI/CD setup via a Jenkinsfile - a text file checked into the project’s source control repository. The following is a sample Jenkinsfile to be used with TestCafe:</p>\r\n<pre><code class=\"lang-java\">pipeline {\r\n    agent any\r\n\r\n    stages {\r\n        stage(&#39;Run E2E tests&#39;) {\r\n            steps {\r\n                sh &#39;npm install&#39;\r\n                sh &#39;npm run test-e2e&#39;\r\n            }\r\n            post {\r\n                always {\r\n                          junit keepLongStdio: true,\r\n                          testDataPublishers: [[$class: &#39;TestCafePublisher&#39;]],\r\n                          testResults: &#39;*.xml&#39;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre><p>Note: The <code>test-e2e</code> npm script in this example launches TestCafe. As mentioned earlier in this topic, be sure to manually set the reporter option. For more information on the TestCafe CLI, see the following help topic: <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface\">Command Line Interface</a>.</p>\r\n<hr>\r\n<p>If you enjoyed this guide and would like more tips on debugging, please see the following blog articles: <a class=\"xref\" href=\"/402894/resources/blog/2020-5-25-how-to-debug-tests-in-testcafe-quick-guide\">How to Debug Tests in TestCafe: Quick Guide</a> and <a class=\"xref\" href=\"/402895/resources/blog/2020-6-30-how-to-speed-up-debugging-in-testcafe-tips-and-tricks\">How to speed up debugging in TestCafe: Tips and Tricks</a>.</p>\r\n","headers":[{"title":"Test case: the disappearing button","tagName":"h2","id":"test-case-the-disappearing-button","lvl":2},{"title":"Basic setup","tagName":"h2","id":"basic-setup","lvl":2},{"title":"Review the results","tagName":"h2","id":"review-the-results","lvl":2},{"title":"Jenkins Pipeline integration","tagName":"h2","id":"jenkins-pipeline-integration","lvl":2}],"title":"Introducing the TestCafe Jenkins Plugin","schema":null,"author":"Pavel Redrukhin, Eugene Titerman","preview":"<p>TestCafe can capture videos and screenshots so you can debug your tests and examine page UI. You can record all tests or only those that failed, generate unique video files for each test or record all of them in one take, and single out specific interactions. (For a full list of available options, see the following help topic: <a class=\"xref\" href=\"/documentation/402840/guides/intermediate-guides/screenshots-and-videos\">Screenshots and Videos</a>).</p>\r\n<p>Many TestCafe users take advantage of Jenkins — a CI/CD solution — to automate their tests. Until recently, they had to manually match the screenshots and videos taken by TestCafe to the individual test reports. The newly implemented <a href=\"https://plugins.jenkins.io/testcafe/\" target=\"_blank\">TestCafe Jenkins plugin<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> simplifies this process. Links to screenshots and videos taken during the test now automatically appear on the Jenkins test results page. There is no need to keep the testing server running — all required files are stored inside the Jenkins build folder.</p>","description":"TestCafe can capture videos and screenshots so you can debug your tests and examine page UI. You can record all tests or only those that failed, generate unique","published":"2020-7-29"},"topicUid":"402897","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Blog","id":"What's New/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"}]},"sidebarNav":{"root":{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},"items":[{"name":"Release Notes","id":"What's New/Release Notes","url":"/release-notes","href":"/release-notes","items":[{"name":"Introducing TestCafe Testing Framework","id":"402864","url":"/402864/release-notes/framework/2016-10-17-introducing-testcafe-open-source-testing-framework"},{"name":"TestCafe v0.10.0 Released","id":"402865","url":"/402865/release-notes/framework/2016-11-8-testcafe-v0-10-0-released"},{"name":"TestCafe v0.11.0 Released","id":"402866","url":"/402866/release-notes/framework/2016-12-8-testcafe-v0-11-0-released"},{"name":"TestCafe v0.12.0 Released","id":"402867","url":"/402867/release-notes/framework/2017-1-19-testcafe-v0-12-0-released"},{"name":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","id":"402874","url":"/402874/release-notes/framework/2017-10-10-testcafe-v0-18-0-released"},{"name":"TestCafe v0.13.0 Released","id":"402868","url":"/402868/release-notes/framework/2017-2-16-testcafe-v0-13-0-released"},{"name":"TestCafe v0.14.0 Released","id":"402869","url":"/402869/release-notes/framework/2017-3-28-testcafe-v0-14-0-released"},{"name":"TestCafe v0.15.0 Released","id":"402870","url":"/402870/release-notes/framework/2017-4-26-testcafe-v0-15-0-released"},{"name":"TestCafe v0.16.0 Released","id":"402871","url":"/402871/release-notes/framework/2017-6-13-testcafe-v0-16-0-released"},{"name":"TestCafe v0.17.0 Released - Testing Electron Apps and Concurrent Test Execution","id":"402872","url":"/402872/release-notes/framework/2017-8-2-testcafe-v0-17-0-released"},{"name":"TestCafe v0.18.0-alpha1 Released - Testing in headless Firefox","id":"402873","url":"/402873/release-notes/framework/2017-9-29-testcafe-v0-18-0-alpha1-released"},{"name":"TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc","id":"402875","url":"/402875/release-notes/framework/2018-03-01-testcafe-v0-19-0-released"},{"name":"TestCafe v0.20.0 Released","id":"402876","url":"/402876/release-notes/framework/2018-05-15-testcafe-v0-20-0-released"},{"name":"TestCafe v0.21.0 Released","id":"402877","url":"/402877/release-notes/framework/2018-08-02-testcafe-v0-21-0-released"},{"name":"TestCafe v0.22.0 Released","id":"402878","url":"/402878/release-notes/framework/2018-09-03-testcafe-v0-22-0-released"},{"name":"TestCafe v0.23.0 Released","id":"402879","url":"/402879/release-notes/framework/2018-10-25-testcafe-v0-23-0-released"},{"name":"TestCafe v0.23.1 Released","id":"402880","url":"/402880/release-notes/framework/2018-11-7-testcafe-v0-23-1-released"},{"name":"TestCafe v1.6.0 Released","id":"402888","url":"/402888/release-notes/framework/2019-10-16-testcafe-v1-6-0-released"},{"name":"TestCafe v1.7.0 Released","id":"402889","url":"/402889/release-notes/framework/2019-11-21-testcafe-v1-7-0-released"},{"name":"TestCafe v1.1.0 Released","id":"402883","url":"/402883/release-notes/framework/2019-2-28-testcafe-v1-1-0-released"},{"name":"Migration from TestCafe v0.x.y to v1.0.0","id":"402881","url":"/402881/release-notes/framework/2019-2-7-migration-from-testcafe-v0-x-y-to-v1-0-0"},{"name":"TestCafe v1.0.0 Released","id":"402882","url":"/402882/release-notes/framework/2019-2-7-testcafe-v1-0-0-released"},{"name":"TestCafe v1.3.0 Released","id":"402884","url":"/402884/release-notes/framework/2019-7-2-testcafe-v1-3-0-released"},{"name":"TestCafe v1.3.1 Released","id":"402885","url":"/402885/release-notes/framework/2019-7-5-testcafe-v1-3-1-released"},{"name":"TestCafe v1.4.0 Released","id":"402886","url":"/402886/release-notes/framework/2019-8-7-testcafe-v1-4-0-released"},{"name":"TestCafe v1.5.0 Released","id":"402887","url":"/402887/release-notes/framework/2019-9-12-testcafe-v1-5-0-released"},{"name":"TestCafe v1.9.0 Released","id":"402891","url":"/402891/release-notes/framework/2020-08-06-testcafe-v1-9-0-released"},{"name":"TestCafe v1.8.0 Released","id":"402890","url":"/402890/release-notes/framework/2020-1-17-testcafe-v1-8-0-released"},{"name":"v1.10.0: New Compiler Options API, Resize and Screenshot Support for Child Windows","id":"402892","url":"/402892/release-notes/framework/2020-12-15-v1-10-0-new-compiler-options-api-resize-and-screenshot-support-for-child-windows"},{"name":"TestCafe v1.11.0 Released","id":"402964","url":"/402964/release-notes/framework/2021-2-15-testcafe-v1-11-0-released"},{"name":"TestCafe v1.12.0 Released","id":"402966","url":"/402966/release-notes/framework/2021-03-03-testcafe-v1-12-0-released"},{"name":"TestCafe v1.13.0 Released","id":"403063","url":"/403063/release-notes/framework/2021-3-22-testcafe-v1-13-0-released"},{"name":"TestCafe v1.14.0 Released","id":"403064","url":"/403064/release-notes/framework/2021-4-7-testcafe-v1-14-0-released"},{"name":"TestCafe v1.15.0 Released","id":"403220","url":"/403220/release-notes/framework/2021-7-8-testcafe-v1-15-0-released"},{"name":"TestCafe v1.16.0 Released","id":"403403","url":"/403403/release-notes/framework/2021-9-8-testcafe-v1-16-0-released"},{"name":"TestCafe v1.17.0 Released","id":"403546","url":"/403546/release-notes/framework/2021-10-2-testcafe-v1-17-0-released"},{"name":"TestCafe v1.18.0 Released","id":"403664","url":"/403664/release-notes/framework/2021-12-22-testcafe-v1-18-0-released"},{"name":"TestCafe v1.18.2 Released","id":"403713","url":"/403713/release-notes/framework/2022-01-18-testcafe-v-1-18-2-released"},{"name":"TestCafe v1.19.0 Released","id":"403938","url":"/403938/release-notes/framework/2022-05-26-testcafe-v1-19-0-released"},{"name":"TestCafe v1.20.0 Released","id":"404002","url":"/404002/release-notes/framework/2022-7-18-testcafe-v1-20-0-released"},{"name":"TestCafe v1.20.1 Released","id":"404029","url":"/404029/release-notes/framework/2022-8-8-testcafe-v-1-20-1-released"},{"name":"TestCafe v2.0.0 Released","id":"404018","url":"/404018/release-notes/framework/2022-8-31-testcafe-v2-0-0-released"},{"name":"TestCafe v2.1.0 Released","id":"404168","url":"/404168/release-notes/framework/2022-11-10-testcafe-v2-1-0-released"},{"name":"TestCafe v2.2.0 Released","id":"404236","url":"/404236/release-notes/framework/2022-12-29-testcafe-v2-2-0-released"},{"name":"TestCafe v2.3.0 Released","id":"404257","url":"/404257/release-notes/framework/2023-1-30-testcafe-v2-3-0-released"},{"name":"TestCafe v2.4.0 Released","id":"404319","url":"/404319/release-notes/framework/2023-3-7-testcafe-v2-4-0-released"},{"name":"TestCafe v2.5.0 Released","id":"404349","url":"/404349/release-notes/framework/2023-4-6-testcafe-v2-5-0-released"},{"name":"TestCafe v2.6.0 Released","id":"404399","url":"/404399/release-notes/framework/2023-5-11-testcafe-v2-6-0-released"},{"name":"TestCafe v2.6.1 Released","id":"404427","url":"/404427/release-notes/framework/2023-5-29-testcafe-v2-6-1-released"},{"name":"Introducing TestCafe v3.0.0","id":"404438","url":"/404438/release-notes/framework/2023-6-21-introducing-testcafe-v-3-0-0"},{"name":"TestCafe v3.1.0 Released","id":"404468","url":"/404468/release-notes/framework/2023-7-27-testcafe-v-3-1-0-released"},{"name":"TestCafe v3.2.0 Released","id":"404492","url":"/404492/release-notes/framework/2023-08-17-testcafe-v3-2-0-released"},{"name":"TestCafe v3.3.0 Released","id":"404515","url":"/404515/release-notes/framework/2023-08-29-testcafe-v3-3-0-released"}]},{"name":"Blog","id":"What's New/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[{"name":"The Fastest Way to Your Next Test – TestCafe + TestCafe Studio - Q&As","id":"402902","url":"/402902/resources/blog/2020-09-24-the-fastest-way-to-your-next-test-qa"},{"name":"Upcoming Webinar: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402903","url":"/402903/resources/blog/2020-11-17-upcoming-webinar-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Client Functions and Script Injection for Page Interaction","id":"402908","url":"/402908/resources/blog/2020-11-18-client-functions-and-script-injection-for-page-interaction"},{"name":"Webinar Recording: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402906","url":"/402906/resources/blog/2020-12-11-webinar-recording-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Randomize Your End-to-End Tests: How to Generate Input Data for TestCafe","id":"402905","url":"/402905/resources/blog/2020-12-28-randomize-your-end-to-end-tests-how-to-generate-input-data-for-testcafe"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"},{"name":"How to Debug Tests in TestCafe: Quick Guide","id":"402894","url":"/402894/resources/blog/2020-5-25-how-to-debug-tests-in-testcafe-quick-guide"},{"name":"How to Speed up Debugging in TestCafe: Tips and Tricks","id":"402895","url":"/402895/resources/blog/2020-6-30-how-to-speed-up-debugging-in-testcafe-tips-and-tricks"},{"name":"Upcoming Webinar: 10 Ways to Simplify Your UI Testing","id":"402896","url":"/402896/resources/blog/2020-7-14-10-ways-to-simplify-your-ui-testing"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"},{"name":"TestCafe Webinar - Your Questions Answered","id":"402898","url":"/402898/resources/blog/2020-8-19-testcafe-webinar-your-questions-answered"},{"name":"Upcoming Webinar: The Fastest Way to Your Next Test – TestCafe + TestCafe Studio","id":"402899","url":"/402899/resources/blog/2020-8-21-the-fastest-way-to-your-next-test"},{"name":"Introducing Multi-window Tests (Beta)","id":"402900","url":"/402900/resources/blog/2020-8-26-introducing-multi-window-tests-beta"},{"name":"How TestCafe Can Help You to Deliver Faster","id":"402901","url":"/402901/resources/blog/2020-9-3-how-testcafe-can-help-you-to-deliver-faster"},{"name":"Upcoming Roundtable: Modern Web Testing with TestCafe","id":"402904","url":"/402904/resources/blog/2021-2-9-modern-web-testing-with-testcafe"},{"name":"Nächste Woche: Deutscher Live-Stream zu TestCafe mit Gregor Biswanger","id":"403292","url":"/403292/resources/blog/2021-7-14-naechste-woche-deutscher-live-stream"},{"name":"Case study: How Medinas started deploying every day by using TestCafe","id":"403422","url":"/403422/resources/blog/2021-9-22-how-medinas-started-deploying-every-day"},{"name":"TestCafe Dashboard (Alpha): Be the First to Explore its Capabilities","id":"403442","url":"/403442/resources/blog/2021-10-7-dashboard-alpha-invitation-announce"},{"name":"Case study: How Neos CMS Increased Reliability and Confidence with E2E testing and TestCafe","id":"403571","url":"/403571/resources/blog/2021-11-17-how-neos-cms-increased-reliability-and-confidence-with-e2e-testing-and-testcafe"},{"name":"The 2022 TestCafe Survey: Let us know what you think!","id":"404008","url":"/404008/resources/blog/2022-7-12-2022-testcafe-survey-let-us-know-what-you-think"},{"name":"From TestCafe 1.0 to TestCafe 2.0: 11 Most Notable Enhancements","id":"404059","url":"/404059/resources/blog/2022-8-31-from-testcafe-10-to-testcafe-20-11-most-notable-enhancements"},{"name":"Case study: SurveyJS — Test-Driven Development with TestCafe","id":"404146","url":"/404146/resources/blog/2022-11-01-surveyjs-case-study"},{"name":"TestCafe Goes Native","id":"404431","url":"/404431/resources/blog/2023-6-21-testcafe-goes-native"}]},{"name":"Community Blogs","id":"What's New/Community Blogs","url":"/resources/community-blogs","href":"/resources/community-blogs"},{"name":"Courses","id":"What's New/Courses","url":"/resources/courses","href":"/resources/courses"},{"name":"Books","id":"What's New/Books","url":"/resources/books","href":"/resources/books"}],"activeItems":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Blog","id":"What's New/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"}],"showLeafs":true},"breadcrumbsNav":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Blog","id":"What's New/Blog","url":"/resources/team-blog","href":"/resources/team-blog"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}