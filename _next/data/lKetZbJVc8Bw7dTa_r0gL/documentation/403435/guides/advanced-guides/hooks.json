{"pageProps":{"content":{"html":"        <h1>Hooks</h1>\r\n\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>This article describes <strong>test hooks</strong>. Read the <a class=\"xref\" href=\"/documentation/402669/reference/test-api/requesthook\">Request Interception</a> guide for more information on <strong>request hooks</strong>. Read the <a class=\"xref\" href=\"/documentation/404388/guides/advanced-guides/modify-reporter-output\">Modify Reporter Output</a> guide for more information on <strong>reporter hooks</strong>.</p>\r\n</div>\r\n<p>Hooks are functions that run immediately before or immediately after other test entities. \r\nYou can attach hooks to the following test entities: <a href=\"#hooks-before-and-after-tests\">tests</a>, <a href=\"#hooks-before-and-after-fixtures\">fixtures</a>, and <a href=\"#hooks-before-and-after-test-runs\">test runs</a>.</p>\r\n<p>“Before” hooks often prepare the testing environment (e.g. authenticate the user) for future tests. Likewise, “after” hooks often ‘reset’ the testing environment (e.g. remove a database object) after the end of a test.</p>\r\n<p>You can <a href=\"#access-fixture-and-test-data-in-hooks\">access test and fixture data</a> inside the hooks, and even <a href=\"#share-data-between-hooks-and-test-code\">share variables</a> between hooks and test code.</p>\r\n<p>To re-use setup and teardown code, attach a single hook to multiple entities of the same kind.</p>\r\n<h2 id=\"table-of-contents__$\"><a class=\"anchor-fix\" href=\"#table-of-contents\" id=\"table-of-contents\"></a>Table of Contents<a class=\"anchor-hash\" href=\"#table-of-contents\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<ul>\r\n<li><a href=\"#local-hooks-and-global-hooks\">Local Hooks and Global Hooks</a></li>\r\n<li><a href=\"#hooks-before-and-after-test-runs\">Hooks before and after test runs</a></li>\r\n<li><a href=\"#hooks-before-and-after-fixtures\">Hooks before and after fixtures</a></li>\r\n<li><a href=\"#hooks-before-and-after-tests\">Hooks before and after tests</a></li>\r\n<li><a href=\"#hook-order-and-priority\">Hook Order and Priority</a></li>\r\n<li><a href=\"#share-data-between-hooks-and-test-code\">Share Data Between Hooks and Test Code</a><ul>\r\n<li><a href=\"#fixture-context\">Fixture context</a></li>\r\n<li><a href=\"#test-context\">Test Context</a></li>\r\n<li><a href=\"#test-run-context\">Test Run Context</a></li>\r\n</ul>\r\n</li>\r\n<li><a href=\"#access-fixture-and-test-data-in-hooks\">Access Fixture and Test Data in Hooks</a><ul>\r\n<li><a href=\"#access-fixture-data-in-fixture-hooks\">Access Fixture Data in Fixture Hooks</a></li>\r\n<li><a href=\"#access-test-and-fixture-data-in-test-hooks\">Access Test and Fixture Data in Test Hooks</a></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<h2 id=\"local-hooks-and-global-hooks__$\"><a class=\"anchor-fix\" href=\"#local-hooks-and-global-hooks\" id=\"local-hooks-and-global-hooks\"></a>Local Hooks and Global Hooks<a class=\"anchor-hash\" href=\"#local-hooks-and-global-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p><strong>Local</strong> hooks reside inside individual test files. These hooks do not affect the rest of the test suite.</p>\r\n<p><strong>Global</strong> hooks apply to your entire test suite. You can only define them in a <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#javascript\">JavaScript configuration file</a>.</p>\r\n<p>Test and fixture hooks can be <em>local</em> or <em>global</em>. Test run hooks are <em>only global</em> because they affect the entirety of your test suite.</p>\r\n<h2 id=\"hooks-before-and-after-test-runs__$\"><a class=\"anchor-fix\" href=\"#hooks-before-and-after-test-runs\" id=\"hooks-before-and-after-test-runs\"></a>Hooks before and after test runs<a class=\"anchor-hash\" href=\"#hooks-before-and-after-test-runs\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Each unique launch of TestCafe constitutes a single <em>test run</em>. The <code>before</code> test run hook launches as soon as you launch TestCafe. TestCafe executes the <code>after</code> test run hook just before the TestCafe process terminates.</p>\r\n<p>Test run hooks cannot access the browser. Use test run hooks to execute server-side tasks (e.g., launch or shut down a web application).</p>\r\n<p>Test run hooks are <a href=\"#local-hooks-and-global-hooks\">global</a>. You can only define global hooks in a <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#javascript\">JavaScript configuration file</a>.</p>\r\n<pre><code class=\"lang-js\">const utils = require (&#39;./my-utils.js&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        testRun: {\r\n            before: async ctx =&gt; {\r\n                ctx.serverId = 123;\r\n\r\n                utils.launchServer(ctx.serverId);\r\n            },\r\n            after: async ctx =&gt; {\r\n                utils.terminateServer(ctx.serverId);\r\n            },\r\n        },\r\n    },\r\n};\r\n</code></pre><h2 id=\"hooks-before-and-after-fixtures__$\"><a class=\"anchor-fix\" href=\"#hooks-before-and-after-fixtures\" id=\"hooks-before-and-after-fixtures\"></a>Hooks before and after fixtures<a class=\"anchor-hash\" href=\"#hooks-before-and-after-fixtures\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Fixture hooks run <em>in between</em> tests. They cannot access the browser and execute page actions. Use fixture hooks to perform server-side operations (e.g. manage database entries).</p>\r\n<h3 id=\"global-fixture-hooks__$\"><a class=\"anchor-fix\" href=\"#global-fixture-hooks\" id=\"global-fixture-hooks\"></a>Global fixture hooks<a class=\"anchor-hash\" href=\"#global-fixture-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Global fixture hooks run before/after each of the fixtures in your test suite. </p>\r\n<p>As with all <a href=\"#local-hooks-and-global-hooks\">global hooks</a>, you can only declare global fixture hooks in a <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#javascript\">JavaScript configuration file</a>.</p>\r\n<p>Use <a href=\"https://nodejs.org/api/modules.html#requireid\" target=\"_blank\">CommonJs<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> <code>require</code> syntax to access Node.js modules inside your configuration file.</p>\r\n<pre><code class=\"lang-js\">const utils = require (&#39;./my-utils.js&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        fixture: {\r\n           before: async ctx =&gt; {\r\n                ctx.dbName= &#39;users&#39;;\r\n\r\n                utils.populateDb(ctx.dbName);\r\n            },\r\n            after: async ctx =&gt; {\r\n                utils.dropDb(ctx.dbName);\r\n            },    \r\n\r\n        },\r\n    },\r\n};\r\n</code></pre><h3 id=\"hooks-for-individual-fixtures__$\"><a class=\"anchor-fix\" href=\"#hooks-for-individual-fixtures\" id=\"hooks-for-individual-fixtures\"></a>Hooks for individual fixtures<a class=\"anchor-hash\" href=\"#hooks-for-individual-fixtures\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Fixture hooks run before/after an individual <a class=\"xref\" href=\"/documentation/402831/guides/basic-guides/test-structure#fixtures\">fixture</a>.</p>\r\n<p>Declare hooks for individual fixtures with the <a class=\"xref\" href=\"/documentation/402785/reference/test-api/fixture/before\">fixture.before</a> and <a class=\"xref\" href=\"/documentation/402787/reference/test-api/fixture/after\">fixture.after</a> methods.</p>\r\n<pre><code class=\"lang-js\">const utils = require (&#39;./my-utils.js&#39;);\r\n\r\nfixture `My fixture`\r\n    .page `http://example.com`\r\n    .before( async ctx =&gt; {\r\n        ctx.dbName= &#39;users&#39;;\r\n\r\n        utils.populateDb(ctx.dbName);\r\n    })\r\n    .after( async ctx =&gt; {\r\n        utils.dropDb(ctx.dbName);\r\n    });\r\n</code></pre><h2 id=\"hooks-before-and-after-tests__$\"><a class=\"anchor-fix\" href=\"#hooks-before-and-after-tests\" id=\"hooks-before-and-after-tests\"></a>Hooks before and after tests<a class=\"anchor-hash\" href=\"#hooks-before-and-after-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Hooks that run before and after tests can access the browser. Feel free to interact with the test page and include <a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions\">page actions</a> in your hook.</p>\r\n<h3 id=\"global-test-hooks__$\"><a class=\"anchor-fix\" href=\"#global-test-hooks\" id=\"global-test-hooks\"></a>Global test hooks<a class=\"anchor-hash\" href=\"#global-test-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Global test hooks run before/after <em>each</em> of the tests in your <em>entire test suite</em>. They do not interfere with the execution of other test hooks.</p>\r\n<p>As with all <a href=\"#local-hooks-and-global-hooks\">global hooks</a>, you can only define global test hooks in a <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#javascript\">JavaScript configuration file</a>.</p>\r\n<p>Use <a href=\"https://nodejs.org/api/modules.html#requireid\" target=\"_blank\">CommonJs<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> <code>require</code> syntax to access Node.js modules inside your configuration file.</p>\r\n<pre><code class=\"lang-js\">const { admin } = require(&#39;roles&#39;);\r\n\r\nmodule.exports = {\r\n    hooks: {\r\n        test: {\r\n            before: async t =&gt; {\r\n                t.ctx = &#39;test data&#39;;\r\n\r\n                await t.useRole(admin); \r\n            },\r\n            after: async t =&gt; {\r\n                await t.click(&#39;#delete-data&#39;);\r\n                console.log(t.ctx); // &gt; test data\r\n            }\r\n        },\r\n    },\r\n};\r\n</code></pre><h3 id=\"fixture-wide-test-hooks__$\"><a class=\"anchor-fix\" href=\"#fixture-wide-test-hooks\" id=\"fixture-wide-test-hooks\"></a>Fixture-wide test hooks<a class=\"anchor-hash\" href=\"#fixture-wide-test-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Fixture-wide test hooks run before/after <em>each</em> of the tests in an individual <a class=\"xref\" href=\"/documentation/402831/guides/basic-guides/test-structure#fixtures\">fixture</a>.</p>\r\n<p>Specify these hooks with the <a class=\"xref\" href=\"/documentation/402784/reference/test-api/fixture/beforeeach\">fixture.beforeEach</a> and <a class=\"xref\" href=\"/documentation/402786/reference/test-api/fixture/aftereach\">fixture.afterEach</a> methods.</p>\r\n<p><a href=\"#hooks-for-individual-tests\">Individual test hooks</a> override fixture-wide <code>beforeEach</code> and <code>afterEach</code> hooks.</p>\r\n<pre><code class=\"lang-js\">import { admin } from &#39;roles&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `http://example.com`\r\n    .beforeEach( async t =&gt; {\r\n        t.ctx = &#39;test data&#39;;\r\n\r\n        await t.useRole(admin);\r\n    })\r\n    .afterEach( async t =&gt; {\r\n        await t.click(&#39;#delete-data&#39;);\r\n        console.log(t.ctx); // &gt; test data\r\n    });\r\n</code></pre><h3 id=\"hooks-for-individual-tests__$\"><a class=\"anchor-fix\" href=\"#hooks-for-individual-tests\" id=\"hooks-for-individual-tests\"></a>Hooks for individual tests<a class=\"anchor-hash\" href=\"#hooks-for-individual-tests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<div class=\"WARNING\"><p class=\"alert-title\">Warning</p><p>Test-specific hooks are an emergency measure. If your test suite is well-organized, test-specific hooks offer no benefit. The only legitimate reason to use a test-specific hook is to override an existing <a href=\"#fixture-wide-test-hooks\">fixture-wide hook</a>.</p>\r\n<p>TestCafe conceived hooks as a tool to help developers re-use code and maintain a cleaner codebase. Test-specific hooks do not run multiple times, and allow for the same kind of code as the test body.</p>\r\n<p>Before you attach a hook to an individual test, ask yourself: “Can I move this code to the test body?”.</p>\r\n</div>\r\n<p>Test hooks run before/after individual <a class=\"xref\" href=\"/documentation/402831/guides/basic-guides/test-structure#tests\">tests</a>. Hooks for individual tests override <a href=\"#fixture-wide-test-hooks\">fixture-wide hooks</a> of the same kind.</p>\r\n<p>Specify hooks for individual tests with the <a class=\"xref\" href=\"/documentation/402738/reference/test-api/test/before\">test.before</a> and <a class=\"xref\" href=\"/documentation/402739/reference/test-api/test/after\">test.after</a> methods. </p>\r\n<pre><code class=\"lang-js\">test\r\n    .before( async t =&gt; {\r\n        t.ctx = &#39;test data&#39;;\r\n\r\n        await t.useRole(admin);\r\n    })\r\n    (&#39;MyTest&#39;, async t =&gt; { /* ... */ })\r\n    .after( async t =&gt; {\r\n        await t.click(&#39;#delete-data&#39;);\r\n        console.log(t.ctx); // &gt; test data\r\n    });\r\n</code></pre><h2 id=\"hook-order-and-priority__$\"><a class=\"anchor-fix\" href=\"#hook-order-and-priority\" id=\"hook-order-and-priority\"></a>Hook Order and Priority<a class=\"anchor-hash\" href=\"#hook-order-and-priority\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Global hooks <strong>do not</strong> override local test and fixture hooks. Global <code>before</code> hooks <strong>precede</strong> local <code>before</code> hooks. Global <code>after</code> hooks <strong>follow</strong> local <code>after</code> hooks.</p>\r\n<p><a href=\"#hooks-for-individual-tests\">Test-specific</a> <code>before</code> and <code>after</code> hooks override <a href=\"#fixture-wide-test-hooks\">fixture-wide</a> test hooks.</p>\r\n<p>The chart below shows the order in which TestCafe executes different components of the test suite.</p>\r\n<p><img src=\"/images/test-flow-chart.svg\" alt=\"Test flow chart\"></p>\r\n<h3 id=\"error-handling__$\"><a class=\"anchor-fix\" href=\"#error-handling\" id=\"error-handling\"></a>Error Handling<a class=\"anchor-hash\" href=\"#error-handling\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If <em>any</em> <code>before</code> hook yields an error, TestCafe skips the remainder of the current fixture and resumes execution at the <code>fixture.after</code> hook.</p>\r\n<h2 id=\"share-data-between-hooks-and-test-code__$\"><a class=\"anchor-fix\" href=\"#share-data-between-hooks-and-test-code\" id=\"share-data-between-hooks-and-test-code\"></a>Share Data Between Hooks and Test Code<a class=\"anchor-hash\" href=\"#share-data-between-hooks-and-test-code\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Every test and fixture contains a unique context (<code>ctx</code>) object. You can use that object to store and access data across different test entities. </p>\r\n<p>Users can access an entity’s context object within the test entity itself, as well as within its hooks.\r\nIf you want to share data across the entirety of your test suite, check out <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#user-variables\">global user variables</a>. Note that global user variables are read-only.</p>\r\n<h3 id=\"fixture-context__$\"><a class=\"anchor-fix\" href=\"#fixture-context\" id=\"fixture-context\"></a>Fixture context<a class=\"anchor-hash\" href=\"#fixture-context\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can access the fixture context object within tests, test hooks, and fixture hooks.</p>\r\n<p>The <code>ctx</code> keyword lets you reference the object in fixture hook code.</p>\r\n<p>The <a class=\"xref\" href=\"/documentation/402701/reference/test-api/testcontroller/fixturectx\">fixtureCtx</a> keyword lets you reference the object in test code and test hook code.</p>\r\n<h4 id=\"example-1-local-hooks__$\"><a class=\"anchor-fix\" href=\"#example-1-local-hooks\" id=\"example-1-local-hooks\"></a>Example 1: Local Hooks<a class=\"anchor-hash\" href=\"#example-1-local-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<pre><code class=\"lang-js\">fixture `Fixture1`\r\n    .before(async ctx  =&gt; {\r\n        ctx.someProp = 123;\r\n    })\r\n    .after(async ctx  =&gt; {\r\n        console.log(ctx.newProp); // &gt; abc\r\n    });\r\n\r\ntest(&#39;Test1&#39;, async t =&gt; {\r\n    console.log(t.fixtureCtx.someProp); // &gt; 123\r\n});\r\n\r\ntest(&#39;Test2&#39;, async t =&gt; {\r\n    t.fixtureCtx.newProp = &#39;abc&#39;;\r\n});\r\n</code></pre><h4 id=\"example-2-global-hooks__$\"><a class=\"anchor-fix\" href=\"#example-2-global-hooks\" id=\"example-2-global-hooks\"></a>Example 2: Global Hooks<a class=\"anchor-hash\" href=\"#example-2-global-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Configuration file (<code>.testcaferc.js</code> or <code>.testcaferc.cjs</code>):</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n    hooks: {\r\n        fixture: {\r\n            before: async ctx =&gt; {\r\n                ctx.someProp  = 123;\r\n                ctx.newProp = &#39;abc&#39;;\r\n            }\r\n        }\r\n    }\r\n};\r\n</code></pre><p>Test file:</p>\r\n<pre><code class=\"lang-js\">fixture(&#39;Fixture 1&#39;)\r\n    .before(async ctx =&gt; {\r\n        console.log(ctx); // &gt; {someProp: 123, newProp: &#39;abc&#39;}\r\n    });\r\n\r\ntest(&#39;Test 1&#39;, async t =&gt; {\r\n    console.log(t.fixtureCtx); // &gt; { someProp: 123, newProp: &#39;abc&#39; }\r\n});\r\n</code></pre><h3 id=\"test-context__$\"><a class=\"anchor-fix\" href=\"#test-context\" id=\"test-context\"></a>Test Context<a class=\"anchor-hash\" href=\"#test-context\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can access test context objects (<a class=\"xref\" href=\"/documentation/402708/reference/test-api/testcontroller/ctx\">t.ctx</a>) within tests and their hooks.</p>\r\n<h4 id=\"example-1-local-hooks-1__$\"><a class=\"anchor-fix\" href=\"#example-1-local-hooks-1\" id=\"example-1-local-hooks-1\"></a>Example 1: Local Hooks<a class=\"anchor-hash\" href=\"#example-1-local-hooks-1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<pre><code class=\"lang-js\">fixture `Fixture1`\r\n    .beforeEach(async t  =&gt; {\r\n        t.ctx.someProp = 123;\r\n    });\r\n\r\ntest\r\n    (&#39;Test1&#39;, async t =&gt; {\r\n        console.log(t.ctx.someProp); // &gt; 123\r\n    })\r\n    .after(async t =&gt; {\r\n         console.log(t.ctx.someProp); // &gt; 123\r\n    });\r\n</code></pre><h4 id=\"example-2-global-hooks-1__$\"><a class=\"anchor-fix\" href=\"#example-2-global-hooks-1\" id=\"example-2-global-hooks-1\"></a>Example 2: Global Hooks<a class=\"anchor-hash\" href=\"#example-2-global-hooks-1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>Configuration file (<code>.testcaferc.js</code> or <code>.testcaferc.cjs</code>):</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n    hooks: {\r\n        test: {\r\n            before: async t =&gt; {\r\n                t.ctx.someProp = 123;\r\n                t.ctx.newProp = &#39;abc&#39;;\r\n            },\r\n            after:  async t =&gt; {\r\n                console.log(t.ctx); // &gt; {someProp: 123, newProp: &#39;abc&#39;}\r\n            },\r\n        },\r\n    },\r\n};\r\n</code></pre><p>Test file:</p>\r\n<pre><code class=\"lang-js\">fixture(&#39;Fixture&#39;)\r\n    .beforeEach(async t =&gt; {\r\n        console.log(t.ctx.someProp); // &gt; 123\r\n    });\r\n\r\ntest(&#39;Test&#39;, async t =&gt; {\r\n    console.log(t.ctx.newProp); // &gt;abc\r\n});\r\n</code></pre><h3 id=\"test-run-context__$\"><a class=\"anchor-fix\" href=\"#test-run-context\" id=\"test-run-context\"></a>Test Run Context<a class=\"anchor-hash\" href=\"#test-run-context\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Use the test run context object (<code>ctx</code>) to share data between global test run hooks.</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n    hooks: {\r\n        testRun: {\r\n            before: async ctx =&gt; {\r\n                ctx.someProp = 123;\r\n            },\r\n            after:  async ctx =&gt; {\r\n                console.log(ctx.someProp); // &gt; 123\r\n            },\r\n        },\r\n    },\r\n};\r\n</code></pre><h2 id=\"access-fixture-and-test-data-in-hooks__$\"><a class=\"anchor-fix\" href=\"#access-fixture-and-test-data-in-hooks\" id=\"access-fixture-and-test-data-in-hooks\"></a>Access Fixture and Test Data in Hooks<a class=\"anchor-hash\" href=\"#access-fixture-and-test-data-in-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>You can access fixture and test data in hook code.</p>\r\n<h3 id=\"access-fixture-data-in-fixture-hooks__$\"><a class=\"anchor-fix\" href=\"#access-fixture-data-in-fixture-hooks\" id=\"access-fixture-data-in-fixture-hooks\"></a>Access Fixture Data in Fixture Hooks<a class=\"anchor-hash\" href=\"#access-fixture-data-in-fixture-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Fixture hooks (<code>fixture.before</code>, <code>fixture.after</code>) have access to the following data:</p>\r\n<ul>\r\n<li>Fixture name (<code>name</code>)</li>\r\n<li>Fixture metadata (<code>meta</code>)</li>\r\n<li>Fixture path (<code>path</code>)</li>\r\n</ul>\r\n<p>To access fixture data, pass the <code>info</code> parameter to the fixture hook alongside <code>ctx</code>:</p>\r\n<pre><code class=\"lang-js\">fixture `Example Fixture`\r\n    .page `http://example.com`\r\n    .meta({ fixtureMeta: &#39;v&#39; })\r\n    .before( async (ctx, info) =&gt; {\r\n        const fixtureName = info.name; /* Example Fixture */\r\n        const fixtureMeta = info.meta; /* { fixtureMeta: &#39;v&#39; } */\r\n        const fixturePath = info.path /* /Users/dan/testcafe/fixture.js */\r\n    });\r\n</code></pre><p>You can reference this parameter in global fixture hooks:</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n    hooks: {\r\n        fixture: {\r\n            before: async (ctx, info) =&gt; {\r\n                const fixtureName = info.name; /* Example Fixture */\r\n                const fixtureMeta = info.meta; /* { fixtureMeta: &#39;v&#39; } */\r\n                const fixturePath = info.path /* /Users/dan/testcafe/fixture.js */\r\n            }\r\n        }\r\n    }\r\n};\r\n</code></pre><h3 id=\"access-test-and-fixture-data-in-test-hooks__$\"><a class=\"anchor-fix\" href=\"#access-test-and-fixture-data-in-test-hooks\" id=\"access-test-and-fixture-data-in-test-hooks\"></a>Access Test and Fixture Data in Test Hooks<a class=\"anchor-hash\" href=\"#access-test-and-fixture-data-in-test-hooks\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Test hooks (<code>fixture.beforeEach</code>, <code>fixture.afterEach</code>, <code>test.before</code>, <code>test.after</code>) have access to the following data:</p>\r\n<ul>\r\n<li>Test name</li>\r\n<li>Test metadata</li>\r\n<li>Fixture name</li>\r\n<li>Fixture metadata</li>\r\n<li>Fixture path</li>\r\n</ul>\r\n<p>The <a class=\"xref\" href=\"/documentation/404445/reference/test-api/testcontroller/fixture\">t.fixture</a> property contains <em>fixture</em> data. The <a class=\"xref\" href=\"/documentation/404444/reference/test-api/testcontroller/test\">t.test</a> property contains <em>test</em> data.</p>\r\n<pre><code class=\"lang-js\">fixture `Example Fixture`\r\n    .page `http://example.com`\r\n    .meta({ fixtureMeta: &#39;v&#39; })\r\n    .beforeEach( async t =&gt; {\r\n            const fixtureName = t.fixture.name; /* Example Fixture */\r\n            const fixtureMeta = t.fixture.meta; /* { fixtureMeta: &#39;v&#39; } */\r\n            const fixturePath = t.fixture.path /* /Users/dan/testcafe/fixture.js */\r\n            const testName = t.test.name; /* MyTest */\r\n            const testMeta = t.test.meta; /* { &#39;key&#39;: &#39;value&#39; } */\r\n})\r\n\r\ntest\r\n    (&#39;MyTest&#39;, async t =&gt; { /* ... */ })\r\n    .meta({ &#39;key&#39;: &#39;value&#39; })\r\n    .after( async t =&gt; {\r\n            const fixtureName = t.fixture.name; /* Example Fixture */\r\n            const fixtureMeta = t.fixture.meta; /* { fixtureMeta: &#39;v&#39; } */\r\n            const fixturePath = t.fixture.path /* /Users/dan/testcafe/fixture.js */\r\n            const testName = t.test.name; /* MyTest */\r\n            const testMeta = t.test.meta; /* { &#39;key&#39;: &#39;value&#39; } */\r\n    });\r\n</code></pre><p>You can reference these properties in global test hooks:</p>\r\n<pre><code class=\"lang-js\">module.exports = {\r\n    hooks: {\r\n        test: {\r\n            before: async t =&gt; {\r\n                const fixtureName = t.fixture.name; /* Example Fixture */\r\n                const fixtureMeta = t.fixture.meta; /* { fixtureMeta: &#39;v&#39; } */\r\n                const fixturePath = t.fixture.path /* /Users/dan/testcafe/fixture.js */\r\n                const testName = t.test.name; /* MyTest */\r\n                const testMeta = t.test.meta; /* { &#39;key&#39;: &#39;value&#39; } */\r\n            }\r\n        },\r\n    },\r\n};\r\n</code></pre>","headers":[{"title":"Table of Contents","tagName":"h2","id":"table-of-contents","lvl":2},{"title":"Local Hooks and Global Hooks","tagName":"h2","id":"local-hooks-and-global-hooks","lvl":2},{"title":"Hooks before and after test runs","tagName":"h2","id":"hooks-before-and-after-test-runs","lvl":2},{"title":"Hooks before and after fixtures","tagName":"h2","id":"hooks-before-and-after-fixtures","lvl":2},{"title":"Hooks before and after tests","tagName":"h2","id":"hooks-before-and-after-tests","lvl":2},{"title":"Hook Order and Priority","tagName":"h2","id":"hook-order-and-priority","lvl":2},{"title":"Share Data Between Hooks and Test Code","tagName":"h2","id":"share-data-between-hooks-and-test-code","lvl":2},{"title":"Access Fixture and Test Data in Hooks","tagName":"h2","id":"access-fixture-and-test-data-in-hooks","lvl":2}],"title":"Hooks","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"403435","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes},"redirectUrl":"/documentation/403435/guides/intermediate-guides/hooks"},"__N_SSG":true}