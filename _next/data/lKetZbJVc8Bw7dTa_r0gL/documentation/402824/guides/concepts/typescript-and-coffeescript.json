{"pageProps":{"content":{"html":"        <h1>TypeScript and CoffeeScript</h1>\r\n\r\n<h2 id=\"typescript-support__$\"><a class=\"anchor-fix\" href=\"#typescript-support\" id=\"typescript-support\"></a>TypeScript Support<a class=\"anchor-hash\" href=\"#typescript-support\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>TestCafe v2.0 and up includes a TypeScript 4 compiler.\r\nTestCafe v1.X includes a TypeScript 3 compiler.</p>\r\n</div>\r\n<p>TestCafe allows you to write tests with <a href=\"https://www.typescriptlang.org/\" target=\"_blank\">TypeScript<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> - a typed superset of JavaScript.\r\nTypeScript comes with rich coding assistance,\r\npainless scalability, check-as-you-type code verification, and much more.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You do not need to manually compile TypeScript tests. TestCafe does this automatically on launch.</p>\r\n</div>\r\n<p>TestCafe bundles the TypeScript declaration file with the npm package, so you do not need to install it separately.</p>\r\n<h3 id=\"write-tests-with-typescript__$\"><a class=\"anchor-fix\" href=\"#write-tests-with-typescript\" id=\"write-tests-with-typescript\"></a>Write Tests with TypeScript<a class=\"anchor-hash\" href=\"#write-tests-with-typescript\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>To start writing tests with TypeScript, install TestCafe into your project directory. For more information, see <a class=\"xref\" href=\"/documentation/402834/guides/basic-guides/install-testcafe#local-installation\">Install TestCafe</a>.</p>\r\n<p>If your text editor supports code completion (for example, VSCode, Sublime Text, WebStorm, etc.) but does not auto-complete TestCafe keywords, it needs to be made aware of the TypeScript declarations that ship with TestCafe. Include the following <code>import</code> statement in one of your test files:</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>If installed <a class=\"xref\" href=\"/documentation/402834/guides/basic-guides/install-testcafe#system-wide-installation\">globally</a>, TestCafe will successfully compile and run your tests written in TypeScript. However, your IDE will not be able to locate the TestCafe declaration file and provide code completion.</p>\r\n</div>\r\n<p><img src=\"/images/typescript-support.png\" alt=\"Writing Tests with TypeScript\"></p>\r\n<p>The syntax of TestCafe is identical for both JavaScript and TypeScript.</p>\r\n<p>Whenever TestCafe encounters TypeScript compilation errors, it includes corresponding error messages in the test report.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p><a class=\"xref\" href=\"/documentation/403655/guides/advanced-guides/advanced-selector-techniques#extend-the-selector-class\">Extending selectors</a> in TypeScript differs from extending selectors in JavaScript. Refer to the <a class=\"xref\" href=\"/documentation/402759/reference/test-api/selector/addcustomdomproperties\">selector.addCustomDOMProperties</a> and <a class=\"xref\" href=\"/documentation/402758/reference/test-api/selector/addcustommethods\">selector.addCustomMethods</a> sections to learn how to extend selectors in TypeScript.</p>\r\n</div>\r\n<h4 id=\"type-cast-page-elements__$\"><a class=\"anchor-fix\" href=\"#type-cast-page-elements\" id=\"type-cast-page-elements\"></a>Type Cast Page Elements<a class=\"anchor-hash\" href=\"#type-cast-page-elements\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>TypeScript compilers cannot automatically identify TestCafe objects that refer to DOM elements. Perform manual <a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#type-assertions\" target=\"_blank\">type assertions<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> in your <a class=\"xref\" href=\"/documentation/402832/guides/basic-guides/client-functions\">client-side code</a> to ensure correct TypeScript compilation.</p>\r\n<p>Specify the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\" target=\"_blank\">HTMLElement<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> data type to access the DOM element’s generic HTMLElement interface.</p>\r\n<p>A <a class=\"xref\" href=\"/documentation/402671/reference/test-api/clientfunction\">client function</a> in the example below calls the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\" target=\"_blank\">Element.scrollIntoView()<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> method to scroll an element into view.</p>\r\n<pre><code class=\"lang-ts\">import { ClientFunction, Selector } from &#39;testcafe&#39;;\r\nconst scrollIntoView = ClientFunction( (selector: Selector) =&gt; {\r\n    const element = selector() as unknown as HTMLElement;\r\n    element.scrollIntoView();\r\n});\r\nfixture`HTMLElement`\r\n    .page(&#39;https://example.com&#39;);\r\ntest(&#39;Scroll element into view&#39;, async t =&gt; {\r\n    const bottomOfPage = Selector(&#39;#bottom-div&#39;);\r\n    await scrollIntoView(bottomOfPage);\r\n});\r\n</code></pre><p>To avoid compilation errors, pick element-specific data types, such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement\" target=\"_blank\">HTMLOListElement<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<p>The example code below calls the <a class=\"xref\" href=\"/documentation/402703/reference/test-api/testcontroller/eval\">t.eval</a> method to determine if an ordered list is <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement#instance_properties\" target=\"_blank\">reversed<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. The generic <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties\" target=\"_blank\">HTMLElement Interface<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> does not provide access to the element’s <code>reversed</code> property. To avoid compilation errors, convert the <code>list</code> object to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement#instance_properties\" target=\"_blank\">HTMLOListElement<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> data type.</p>\r\n<pre><code class=\"lang-ts\">import { Selector } from &#39;testcafe&#39;;\r\nfixture`HTMLOListElement`\r\n    .page(&#39;https://example.com&#39;);\r\ntest(&#39;Check that the list is reversed&#39;, async t =&gt; {\r\n    const olElement = Selector(&#39;#ordered-list&#39;);\r\n    const isListReversed = await t.eval(() =&gt; {\r\n        const list = olElement() as unknown as HTMLOListElement;\r\n        return list.reversed;\r\n    },\r\n    {\r\n        dependencies: { olElement }\r\n    });\r\n    await t\r\n        .expect(isListReversed)\r\n        .ok();\r\n});\r\n</code></pre><p>You can read more about client-side code in the <a class=\"xref\" href=\"/documentation/402832/guides/basic-guides/client-functions\">Obtain Client-Side Info</a> topic.</p>\r\n<h3 id=\"customize-compiler-options__$\"><a class=\"anchor-fix\" href=\"#customize-compiler-options\" id=\"customize-compiler-options\"></a>Customize Compiler Options<a class=\"anchor-hash\" href=\"#customize-compiler-options\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>TestCafe users can modify <a href=\"https://www.typescriptlang.org/docs/handbook/compiler-options.html\" target=\"_blank\">the settings<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> of the TypeScript compiler in one of the following three ways:</p>\r\n<ul>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--compiler-options-options\">--compiler-options</a> command line parameter,</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome my-tests --compiler-options typescript.options.lib=lib.es5.d.ts,lib.webworker.d.ts;typescript.typesRoot=&#39;this value contains spaces&#39;\r\n</code></pre></li>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402659/reference/testcafe-api/runner/compileroptions\">runner.compilerOptions</a> API method,</p>\r\n<pre><code class=\"lang-js\">runner.compilerOptions({\r\n&quot;typescript&quot;: {\r\n    customCompilerModulePath: &#39;../node_modules/typescript-v4&#39;,\r\n    …\r\n }});\r\n</code></pre></li>\r\n<li><p>the <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#compileroptions\">compilerOptions</a> configuration file property.</p>\r\n<pre><code class=\"lang-json\">{\r\n&quot;compilerOptions&quot;: {\r\n    &quot;typescript&quot;: {\r\n       &quot;configPath&quot;: &quot;&lt;path to tsconfig.json&gt;&quot;,\r\n       &quot;customCompilerModulePath&quot;: &quot;path to custom Typescript compiler module&quot;,\r\n       &quot;options&quot;: {&quot;experimentalDecorators&quot;:  &quot;true&quot;}\r\n       }\r\n    }\r\n}\r\n</code></pre></li>\r\n</ul>\r\n<p>See the full list of available options in the <a href=\"https://www.typescriptlang.org/docs/handbook/compiler-options.html\" target=\"_blank\">TypeScript Compiler Options<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> topic.</p>\r\n<p>TestCafe passes the following options to the TypeScript compiler unless you override them:</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Option</th>\r\n<th>Value</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><code>allowJs</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>emitDecoratorMetadata</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>experimentalDecorators</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>inlineSourceMap</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>noImplicitAny</code></td>\r\n<td><code>false</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>pretty</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>suppressOutputPathCheck</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n<tr>\r\n<td><code>skipLibCheck</code></td>\r\n<td><code>true</code></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>TestCafe enables the <code>skipLibCheck</code> option for performance reasons. If you need to check types in your declaration files, set <code>skipLibCheck</code> to <code>false</code>.</p>\r\n</div>\r\n<h2 id=\"coffeescript-support__$\"><a class=\"anchor-fix\" href=\"#coffeescript-support\" id=\"coffeescript-support\"></a>CoffeeScript Support<a class=\"anchor-hash\" href=\"#coffeescript-support\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>TestCafe allows you to write tests with <a href=\"https://coffeescript.org/\" target=\"_blank\">CoffeeScript<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<p><strong>Example</strong></p>\r\n<div class=\"tabGroup\" id=\"tabgroup_jvuTiGcKiO\">\r\n<ul role=\"tablist\">\r\n<li role=\"presentation\">\r\n<a href=\"#tabpanel_jvuTiGcKiO_tabid-coffee\" role=\"tab\" aria-controls=\"tabpanel_jvuTiGcKiO_tabid-coffee\" data-tab=\"tabid-coffee\" tabindex=\"0\" aria-selected=\"true\">CoffeeScript</a>\r\n</li>\r\n</ul>\r\n<section id=\"tabpanel_jvuTiGcKiO_tabid-coffee\" role=\"tabpanel\" data-tab=\"tabid-coffee\">\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;\r\n\r\nfixture &#39;CoffeeScript Example&#39;\r\n    .page &#39;https://devexpress.github.io/testcafe/example/&#39;\r\n\r\nnameInput = Selector &#39;#developer-name&#39;\r\n\r\ntest &#39;Test&#39;, (t) =&gt;\r\n    await t\r\n        .typeText(nameInput, &#39;Peter&#39;)\r\n        .typeText(nameInput, &#39;Paker&#39;, { replace: true })\r\n        .typeText(nameInput, &#39;r&#39;, { caretPos: 2 })\r\n        .expect(nameInput.value).eql &#39;Parker&#39;;\r\n</code></pre></section>\r\n</div>\r\n<p>You do not need to manually compile CoffeeScript tests. TestCafe does this automatically on launch.</p>\r\n","headers":[{"title":"TypeScript Support","tagName":"h2","id":"typescript-support","lvl":2},{"title":"CoffeeScript Support","tagName":"h2","id":"coffeescript-support","lvl":2}],"title":"TypeScript and CoffeeScript","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402824","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes},"redirectUrl":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},"__N_SSG":true}