{"pageProps":{"content":{"html":"        <h1>Fire DOM Events</h1>\r\n\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>This article describes how to fire arbitrary DOM events during test execution. Read the <a class=\"xref\" href=\"/documentation/404150/guides/advanced-guides/custom-test-actions\">Custom Test Actions</a> guide for information on how to define custom TestController actions.</p>\r\n</div>\r\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event\" target=\"_blank\">DOM events<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> occur when users interact with the page. For example, a simple <a class=\"xref\" href=\"/documentation/402710/reference/test-api/testcontroller/click\">click action</a> consists of three distinct DOM events: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event\" target=\"_blank\">mousedown<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event\" target=\"_blank\">mouseup<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event\" target=\"_blank\">click<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. Action <a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions\">methods</a> that come with TestCafe fire DOM events to <em>simulate</em> user interaction. </p>\r\n<p>TestCafe can <a class=\"xref\" href=\"/documentation/403091/reference/test-api/testcontroller/dispatchevent\">dispatch arbitrary DOM events</a>.</p>\r\n<p>If you need to perform a page interaction that TestCafe does not support out of the box, break it down into discrete DOM events, and fire events one by one with the <a class=\"xref api-link\" href=\"/documentation/403091/reference/test-api/testcontroller/dispatchevent\">t.dispatchEvent</a> method. Save the code as a <a class=\"xref\" href=\"/documentation/404150/guides/advanced-guides/custom-test-actions\">custom test action</a> to reuse it throughout your test suite.</p>\r\n<h2 id=\"events-and-constructors__$\"><a class=\"anchor-fix\" href=\"#events-and-constructors\" id=\"events-and-constructors\"></a>Events and Constructors<a class=\"anchor-hash\" href=\"#events-and-constructors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>There are many <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events#event_listing\" target=\"_blank\">different kinds of DOM events<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. Some events can only target certain page elements (i.e. <code>submit</code> events can only target <code>&lt;form&gt;</code> elements). Some events have parameters that other events donâ€™t.</p>\r\n<p>Similar events share the same <em>event constructor</em>. Event constructors determine how you can customize the event, and what entities the event can target.</p>\r\n<h3 id=\"common-events__$\"><a class=\"anchor-fix\" href=\"#common-events\" id=\"common-events\"></a>Common Events<a class=\"anchor-hash\" href=\"#common-events\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<ul>\r\n<li><a href=\"#mouseevent\">MouseEvent()</a></li>\r\n<li><a href=\"#keyboardevent\">KeyboardEvent()</a></li>\r\n<li><a href=\"#inputevent\">InputEvent()</a></li>\r\n<li><a href=\"#focusevent\">FocusEvent()</a></li>\r\n<li><a href=\"#pointerevent\">PointerEvent()</a></li>\r\n</ul>\r\n<blockquote><p>TestCafe lets you fire common DOM events without specifying the constructor. If the action that you want to dispatch corresponds to one of the constructors above, TestCafe automatically launches the correct constructor for the event.</p>\r\n</blockquote>\r\n<h4 id=\"mouseevent__$\"><a class=\"anchor-fix\" href=\"#mouseevent\" id=\"mouseevent\"></a>MouseEvent()<a class=\"anchor-hash\" href=\"#mouseevent\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent\" target=\"_blank\">MouseEvent constructor<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> fires the following events:</p>\r\n<ul>\r\n<li><code>mouseup</code></li>\r\n<li><code>mousedown</code></li>\r\n<li><code>click</code></li>\r\n<li><code>dbclick</code></li>\r\n<li><code>mousemove</code></li>\r\n<li><code>mouseover</code></li>\r\n<li><code>mouseleave</code></li>\r\n<li><code>contextmenu</code></li>\r\n<li><code>drag</code></li>\r\n<li><code>dragend</code></li>\r\n<li><code>dragenter</code></li>\r\n<li><code>dragexit</code></li>\r\n<li><code>dragleave</code></li>\r\n<li><code>dragover</code></li>\r\n<li><code>dragstart</code></li>\r\n<li><code>drop</code></li>\r\n</ul>\r\n<p>The MouseEvent constructor accepts <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent#instance_properties\" target=\"_blank\">MouseEvent properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\" target=\"_blank\"><em>buttons</em> property<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> specifies the primary click button. The default value of the buttons property is <code>1</code> (the left button).</p>\r\n<p>The example below fires the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event\" target=\"_blank\">mousedown<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event\" target=\"_blank\">mouseup<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> events to simulate a 5-second-long left-click action. Note the value of the <code>buttons</code> option.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture`Trigger Mouse Events`\r\n    .page(&#39;www.example.com&#39;);\r\n\r\ntest(&#39;Left-click a button for 5 seconds&#39;, async t =&gt; {\r\n    const target = Selector(&#39;#target&#39;);\r\n\r\n    await t\r\n        .dispatchEvent(target, &#39;mousedown&#39;)\r\n        .wait(5000)\r\n        .dispatchEvent(target, &#39;mouseup&#39;);\r\n});\r\n</code></pre><p>The example below simulates a 5-second-long right-click action. Note the value of the <code>buttons</code> option.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture`Trigger Mouse Events`\r\n    .page(&#39;www.example.com&#39;);\r\n\r\ntest(&#39;Right-click a button for 5 seconds&#39;, async t =&gt; {\r\n    const target  = Selector(&#39;#target&#39;);\r\n    const options = {\r\n        buttons: 2\r\n    };\r\n\r\n    await t\r\n        .dispatchEvent(target, &#39;mousedown&#39;, options)\r\n        .wait(5000)\r\n        .dispatchEvent(target, &#39;mouseup&#39;, options);\r\n});\r\n</code></pre><h4 id=\"keyboardevent__$\"><a class=\"anchor-fix\" href=\"#keyboardevent\" id=\"keyboardevent\"></a>KeyboardEvent()<a class=\"anchor-hash\" href=\"#keyboardevent\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\" target=\"_blank\">KeyboardEvent constructor<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> fires the following events: </p>\r\n<ul>\r\n<li><code>keydown</code></li>\r\n<li><code>keyup</code></li>\r\n<li><code>keypress</code></li>\r\n</ul>\r\n<p>The KeyboardEvent constructor accepts <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#instance_properties\" target=\"_blank\">KeyboardEvent Properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h4 id=\"inputevent__$\"><a class=\"anchor-fix\" href=\"#inputevent\" id=\"inputevent\"></a>InputEvent()<a class=\"anchor-hash\" href=\"#inputevent\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/InputEvent\" target=\"_blank\">InputEvent constructor<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> fires the following events:</p>\r\n<ul>\r\n<li><code>input</code></li>\r\n<li><code>beforeinput</code></li>\r\n</ul>\r\n<p>The InputEvent constructor accepts <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/InputEvent#instance_properties\" target=\"_blank\">InputEvent Properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h4 id=\"focusevent__$\"><a class=\"anchor-fix\" href=\"#focusevent\" id=\"focusevent\"></a>FocusEvent()<a class=\"anchor-hash\" href=\"#focusevent\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent\" target=\"_blank\">FocusEvent constructor<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> fires the following events:</p>\r\n<ul>\r\n<li><code>blur</code></li>\r\n<li><code>focus</code></li>\r\n<li><code>focusin</code></li>\r\n<li><code>focusout</code></li>\r\n</ul>\r\n<p>The FocusEvent constructor accepts <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent#instance_properties\" target=\"_blank\">FocusEvent properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h4 id=\"pointerevent__$\"><a class=\"anchor-fix\" href=\"#pointerevent\" id=\"pointerevent\"></a>PointerEvent()<a class=\"anchor-hash\" href=\"#pointerevent\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h4>\r\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/PointerEvent\" target=\"_blank\">PointerEvent Constructor<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> fires the following events:</p>\r\n<ul>\r\n<li><code>pointerover</code></li>\r\n<li><code>pointerenter</code></li>\r\n<li><code>pointerdown</code></li>\r\n<li><code>pointermove</code></li>\r\n<li><code>pointerrawupdate</code></li>\r\n<li><code>pointerup</code></li>\r\n<li><code>pointercancel</code></li>\r\n<li><code>pointerout</code></li>\r\n<li><code>pointerleave</code></li>\r\n</ul>\r\n<p>The PointerEvent constructor accepts <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties\" target=\"_blank\">PointerEvent properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h3 id=\"custom-events__$\"><a class=\"anchor-fix\" href=\"#custom-events\" id=\"custom-events\"></a>Custom Events<a class=\"anchor-hash\" href=\"#custom-events\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The CustomEvent constructor fires custom events with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#instance_properties\" target=\"_blank\">CustomEvent properties<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<p>The example below dispatches a <code>foo</code> event. </p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture`Custom Events`\r\n    .page(&#39;www.example.com&#39;);\r\n\r\ntest(&#39;Dispatch a CustomEvent&#39;, async t =&gt; {\r\n    const target  = Selector(&#39;#target&#39;);\r\n\r\n    await t\r\n        .dispatchEvent(target, &#39;foo&#39;)\r\n});\r\n</code></pre><h3 id=\"other-events__$\"><a class=\"anchor-fix\" href=\"#other-events\" id=\"other-events\"></a>Other Events<a class=\"anchor-hash\" href=\"#other-events\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>To pick a different constructor, define the value of the <code>eventConstructor</code> property.</p>\r\n<p>The following example fires a <code>touchstart</code> TouchEvent:</p>\r\n<pre><code class=\"lang-js\">dsa\r\nimport { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture`Dispatch Events`\r\n    .page(&#39;./index.html&#39;);\r\n\r\ntest(&#39;Dispatch a TouchEvent&#39;, async t =&gt; {\r\n    const target = Selector(&#39;#target&#39;);\r\n\r\n    const options = Object.assign({ \r\n       eventConstructor: &#39;TouchEvent&#39; \r\n       });\r\n\r\n    await t\r\n        .dispatchEvent(target, &#39;touchstart&#39;, options)\r\n});\r\n</code></pre>","headers":[{"title":"Events and Constructors","tagName":"h2","id":"events-and-constructors","lvl":2}],"title":"Fire DOM Events","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"403219","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes},"redirectUrl":"/documentation/403219/guides/advanced-guides/fire-dom-events"},"__N_SSG":true}