{"pageProps":{"content":{"html":"        <h1>Reporter Plugin</h1>\r\n\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>Use the <code>onBeforeWrite</code> hook to customize your test reports, if the customization does not justify the creation of a custom reporter plugin. </p>\r\n</div>\r\n<p>TestCafe has a number of <a class=\"xref\" href=\"/documentation/402825/guides/intermediate-guides/reporters\">built-in reporters</a> to generate test reports in different formats.\r\nYou can also create a <strong>custom reporter</strong> that will output information in your own format and style.\r\nFor this purpose, you can use the <a href=\"https://github.com/DevExpress/generator-testcafe-reporter\" target=\"_blank\">TestCafe reporter generator<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.\r\nThe generator will scaffold out a reporter plugin, so that you only need to write a few lines of code.</p>\r\n<p>To create a reporter plugin, go through the following steps.</p>\r\n<ul>\r\n<li><a href=\"#generate-a-reporter-project\">Generate a Reporter Project</a></li>\r\n<li><a href=\"#implement-the-reporter\">Implement the Reporter</a></li>\r\n<li><a href=\"#build-the-reporter\">Build the Reporter</a></li>\r\n<li><a href=\"#test-the-reporter\">Test the Reporter</a></li>\r\n<li><a href=\"#preview-the-report\">Preview the Report</a></li>\r\n<li><a href=\"#use-the-reporter-development-version\">Use the Reporter Development Version</a></li>\r\n<li><a href=\"#publish-the-reporter-to-npm\">Publish the Reporter to npm</a></li>\r\n</ul>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>You can also specify a reporter object in the <a class=\"xref\" href=\"/documentation/402656/reference/testcafe-api/runner/reporter#specify-a-custom-reporter\">TestCafe programming interface</a>. However, a reporter plugin is easier to reuse and maintain.</p>\r\n</div>\r\n<h2 id=\"generate-a-reporter-project__$\"><a class=\"anchor-fix\" href=\"#generate-a-reporter-project\" id=\"generate-a-reporter-project\"></a>Generate a Reporter Project<a class=\"anchor-hash\" href=\"#generate-a-reporter-project\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>First, install <a href=\"https://yeoman.io/\" target=\"_blank\">Yeoman<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> and <code>generator-testcafe-reporter</code> using <a href=\"https://www.npmjs.com/\" target=\"_blank\">npm<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<pre><code class=\"lang-bash\">npm install -g yo\r\nnpm install -g generator-testcafe-reporter\r\n</code></pre><p>Create a new directory where the generator should place your scaffolded project files and go into it.</p>\r\n<pre><code class=\"lang-bash\">mkdir my-reporter\r\ncd my-reporter\r\n</code></pre><div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>It is recommended that you name the directory as you would name your reporter project. When you run the generator, it will automatically suggest the reporter name that matches the reporter directory name.\r\nThe generator will also automatically create the reporter package name that consists of two parts - the <code>testcafe-reporter-</code> prefix and the name of the reporter itself, for example, <code>testcafe-reporter-my-reporter</code>.</p>\r\n</div>\r\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>If you name the reporter package manually, its name must begin with the <code>testcafe-reporter-</code> prefix. Otherwise, TestCafe will be unable to recognize the plugin.</p>\r\n</div>\r\n<p>Then, run the reporter generator to create a new project.</p>\r\n<pre><code class=\"lang-bash\">yo testcafe-reporter\r\n</code></pre><p>The generator will ask you a few questions about the reporter.\r\nThen Yeoman will automatically scaffold out your reporter, install the required dependencies, and pull in several useful Gulp tasks for your workflow.</p>\r\n<h2 id=\"implement-the-reporter__$\"><a class=\"anchor-fix\" href=\"#implement-the-reporter\" id=\"implement-the-reporter\"></a>Implement the Reporter<a class=\"anchor-hash\" href=\"#implement-the-reporter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Once the reporter has been scaffolded out, go to the reporter directory and open the <code>src/index.js</code> file.</p>\r\n<p>Implement the following reporter methods (four mandatory and one optional):</p>\r\n<pre><code class=\"lang-js\">export default function () {\r\n    return {\r\n        async reportTaskStart (/* startTime, userAgents, testCount */) {\r\n            throw new Error(&#39;Not implemented&#39;);\r\n        },\r\n\r\n        async reportFixtureStart (/* name, path, meta */) {\r\n            throw new Error(&#39;Not implemented&#39;);\r\n        },\r\n\r\n        async reportTestStart (/* name, meta */) {\r\n            // NOTE: This method is optional.\r\n        },\r\n\r\n        async reportTestDone (/* name, testRunInfo, meta */) {\r\n            throw new Error(&#39;Not implemented&#39;);\r\n        },\r\n\r\n        async reportTaskDone (/* endTime, passed, warnings, result */) {\r\n            throw new Error(&#39;Not implemented&#39;);\r\n        }\r\n    };\r\n}\r\n</code></pre><p>TestCafe calls these methods during the test run. Use data they receive through their parameters to create a report.\r\nSee <a class=\"xref\" href=\"/documentation/402790/reference/plugin-api/reporter\">Reporter Methods</a> for API description and examples.</p>\r\n<p>Use <a class=\"xref\" href=\"/documentation/402790/reference/plugin-api/reporter#helper-methods\">helper methods and libraries</a> to write and format the report.\r\nTestCafe mixes the helper methods into the reporter. You can access them with <code>this</code>.</p>\r\n<p>In the <code>src/index.js</code> file, you can specify the <code>noColors</code> property to enable or disable colors in the reporter output.\r\nTo customize colors, use the <a class=\"xref\" href=\"/documentation/402790/reference/plugin-api/reporter#chalk\">chalk</a> methods.</p>\r\n<p><strong>Example</strong></p>\r\n<p>The following example demonstrates how you can implement the four main methods,\r\nso that the generated report contains information about user agents used for testing,\r\nthe result of individual test execution, summary information about passed/failed tests,\r\nand the overall duration of the tests.</p>\r\n<pre><code class=\"lang-js\">export default function () {\r\n    return {\r\n        async reportTaskStart (startTime, userAgents, testCount) {\r\n            this.startTime = startTime;\r\n            this.testCount = testCount;\r\n\r\n            this.write(`Running tests in: ${userAgents}`)\r\n                .newline()\r\n                .newline();\r\n        },\r\n\r\n        async reportFixtureStart (name, path, meta) {\r\n            this.currentFixtureName = name;\r\n        },\r\n\r\n        async reportTestDone (name, testRunInfo, meta) {\r\n            const errors      = testRunInfo.errs;\r\n            const warnings    = testRunInfo.warnings;\r\n            const browsers    = testRunInfo.browsers;\r\n            const reportData  = testRunInfo.reportData;\r\n            const hasErrors   = !!errors.length;\r\n            const hasWarnings = !!warnings.length;\r\n            const result      = hasErrors ? `failed` : `passed`;\r\n\r\n            name = `${this.currentFixtureName} - ${name}`;\r\n\r\n            const title = `${result} ${name}`;\r\n\r\n            this.write(title);\r\n\r\n            if(hasErrors) {\r\n                this.newline()\r\n                    .write(&#39;Errors:&#39;);\r\n\r\n                errors.forEach(error =&gt; {\r\n                    this.newline()\r\n                        .write(this.formatError(error));\r\n                });\r\n            }\r\n\r\n            if(hasWarnings) {\r\n                this.newline()\r\n                    .write(&#39;Warnings:&#39;);\r\n\r\n                warnings.forEach(warning =&gt; {\r\n                    this.newline()\r\n                        .write(warning);\r\n                });\r\n            }\r\n\r\n            browsers.forEach(browser =&gt; {\r\n               const { testRunId, prettyUserAgent } = browser;\r\n               const browserData = reportData[testRunId];\r\n\r\n               this.write(prettyUserAgent)\r\n                  .newline()\r\n                  .write(browserData)\r\n            },\r\n\r\n        async reportTaskDone (endTime, passed, warnings, result) {\r\n            const durationMs  = endTime - this.startTime;\r\n            const durationStr = this.moment\r\n                                    .duration(durationMs)\r\n                                    .format(&#39;h[h] mm[m] ss[s]&#39;);\r\n            let footer = result.failedCount ?\r\n                        `${result.failedCount}/${this.testCount} failed` :\r\n                        `${result.passedCount} passed`;\r\n\r\n            footer += ` (Duration: ${durationStr})`;\r\n            footer += ` (Skipped: ${result.skippedCount})`;\r\n            footer += ` (Warnings: ${warnings.length})`;\r\n\r\n            this.write(footer)\r\n                .newline();\r\n        }\r\n    };\r\n}\r\n</code></pre><p>Here is a sample report generated by this reporter.</p>\r\n<pre><code class=\"lang-plaintext\">Running tests in: Chrome 41.0.2227 / Mac OS X 10.10.1,Firefox 47 / Mac OS X 10.10.1\r\n\r\nfailed First fixture - First test in first fixture\r\nfailed First fixture - Second test in first fixture\r\nfailed First fixture - Third test in first fixture\r\nfailed Second fixture - First test in second fixture\r\nfailed Second fixture - Second test in second fixture\r\nfailed Third fixture - First test in third fixture\r\n2/6 failed (Duration: 15m 25s)\r\n</code></pre><h2 id=\"build-the-reporter__$\"><a class=\"anchor-fix\" href=\"#build-the-reporter\" id=\"build-the-reporter\"></a>Build the Reporter<a class=\"anchor-hash\" href=\"#build-the-reporter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>You can build the reporter project by using the <code>build</code> Gulp task.</p>\r\n<pre><code class=\"lang-bash\">gulp build\r\n</code></pre><h2 id=\"test-the-reporter__$\"><a class=\"anchor-fix\" href=\"#test-the-reporter\" id=\"test-the-reporter\"></a>Test the Reporter<a class=\"anchor-hash\" href=\"#test-the-reporter\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>To make sure your reporter operates well, you can use the <code>test</code> Gulp task.\r\nTo get this task to work, provide reference reports in your format.\r\nDuring testing, reports generated by the reporter will be compared with these reference reports.</p>\r\n<p>First, you need to know what data to use in these reports. There are two ways of determining this.</p>\r\n<ul>\r\n<li>Refer to the test input data at <code>&lt;reporter-directory&gt;/test/utils/reporter-test-calls.js</code>. This file contains a\r\nsequence of reporter method calls. Each method uses a number of input data.</li>\r\n<li>Explore an existing reporter, say, the <a href=\"https://github.com/DevExpress/testcafe-reporter-list\" target=\"_blank\">list<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> reporter.\r\nYou can either run the <code>preview</code> Gulp task to view the reporter output in your terminal,\r\nor find the reference report at <code>/test/data/report-without-colors</code>.</li>\r\n</ul>\r\n<p>Then, compose two reference reports.</p>\r\n<ul>\r\n<li>A regular report. Put it into <code>/test/data/</code> and name it <code>report-without-colors</code>.</li>\r\n<li>A colored report, which is a JSON file that consists of a single string - the report text with\r\nadditional color information specified using <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\" target=\"_blank\">ANSI escape codes<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.\r\nPut this JSON file into <code>/test/data/</code> and name it <code>report-with-colors.json</code>.</li>\r\n</ul>\r\n<p>After the reference reports are ready, you can use the <code>test</code> task.</p>\r\n<pre><code class=\"lang-bash\">gulp test\r\n</code></pre><h2 id=\"preview-the-report__$\"><a class=\"anchor-fix\" href=\"#preview-the-report\" id=\"preview-the-report\"></a>Preview the Report<a class=\"anchor-hash\" href=\"#preview-the-report\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>You can preview the report built by your reporter using the <code>preview</code> Gulp task.</p>\r\n<pre><code class=\"lang-bash\">gulp preview\r\n</code></pre><h2 id=\"use-the-reporter-development-version__$\"><a class=\"anchor-fix\" href=\"#use-the-reporter-development-version\" id=\"use-the-reporter-development-version\"></a>Use the Reporter Development Version<a class=\"anchor-hash\" href=\"#use-the-reporter-development-version\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>If you are still developing the reporter, but need to test it within TestCafe, there is no need to publish the reporter package to npm.\r\nYou can link the reporter to TestCafe by using the <a href=\"https://docs.npmjs.com/cli/v7/commands/npm-link/\" target=\"_blank\">npm link<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> command.\r\nThis allows you to work on the reporter project and test it iteratively without having to re-publish the project every time you make a change to it.</p>\r\n<p>To link the reporter package, navigate to the reporter directory and run <code>npm link</code>:</p>\r\n<pre><code class=\"lang-bash\">cd my-reporter\r\nnpm link\r\n</code></pre><p>After that, TestCafe will use the reporter version you are currently developing.</p>\r\n<p>For information on how to specify a reporter in tests, see <a class=\"xref\" href=\"/documentation/402825/guides/intermediate-guides/reporters#specify-the-reporter\">Reporters</a>.</p>\r\n<h2 id=\"publish-the-reporter-to-npm__$\"><a class=\"anchor-fix\" href=\"#publish-the-reporter-to-npm\" id=\"publish-the-reporter-to-npm\"></a>Publish the Reporter to npm<a class=\"anchor-hash\" href=\"#publish-the-reporter-to-npm\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>When you finish developing the reporter, you can publish it to npm by running the <code>publish-please</code> npm script.\r\nThis script builds the package, tests the reporter and then uses <a href=\"https://github.com/inikulin/publish-please\" target=\"_blank\">publish-please<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a> to publish it to npm.\r\nThat is why using the <code>publish-please</code> script instead of <code>npm publish</code> is what is recommended.</p>\r\n<pre><code class=\"lang-bash\">npm run publish-please\r\n</code></pre><p>After that, you can install the reporter plugin as you would <a class=\"xref\" href=\"/documentation/402811/guides/extend-testcafe/install-plugins\">install any other plugin</a> and use it in the same manner\r\nas you would use the <a class=\"xref\" href=\"/documentation/402825/guides/intermediate-guides/reporters#specify-the-reporter\">built-in reporters</a>.</p>\r\n","headers":[{"title":"Generate a Reporter Project","tagName":"h2","id":"generate-a-reporter-project","lvl":2},{"title":"Implement the Reporter","tagName":"h2","id":"implement-the-reporter","lvl":2},{"title":"Build the Reporter","tagName":"h2","id":"build-the-reporter","lvl":2},{"title":"Test the Reporter","tagName":"h2","id":"test-the-reporter","lvl":2},{"title":"Preview the Report","tagName":"h2","id":"preview-the-report","lvl":2},{"title":"Use the Reporter Development Version","tagName":"h2","id":"use-the-reporter-development-version","lvl":2},{"title":"Publish the Reporter to npm","tagName":"h2","id":"publish-the-reporter-to-npm","lvl":2}],"title":"Reporter Plugin","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402810","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Extend TestCafe","id":"402634/Extend TestCafe"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Extend TestCafe","id":"402634/Extend TestCafe"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Extend TestCafe","id":"402634/Extend TestCafe"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}