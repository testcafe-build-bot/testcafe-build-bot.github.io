{"pageProps":{"content":{"html":"        <h1>Built-In Wait Mechanisms</h1>\r\n\r\n<p>Web applications do not respond to user requests immediately. Database queries take time to complete and components take time to render.</p>\r\n<p>There are end-to-end testing frameworks that cannot account for this behavior. As a result, they execute actions before action targets appear on the page. This shortcoming is the leading cause of unstable tests that fail for unknown reasons.</p>\r\n<p>To solve the problem, many frameworks ask their users to insert explicit “wait” statements between actions. This design decision complicates the test development process and prolongs test execution time.</p>\r\n<p>TestCafe does things differently. It can intelligently anticipate delays in the course of a test’s execution.</p>\r\n<p>This article describes the wait mechanisms that operate when TestCafe executes <a href=\"#wait-mechanism-for-selectors\">selectors</a>, performs <a href=\"#wait-mechanism-for-actions\">test actions</a>, evaluates <a href=\"#wait-mechanism-for-assertions\">assertions</a>, sends <a href=\"#wait-mechanism-for-xhr-and-fetch-requests\">AJAX requests</a>, and <a href=\"#wait-mechanism-for-redirects\">navigates to a new page</a>.</p>\r\n<h2 id=\"wait-mechanism-for-selectors__$\"><a class=\"anchor-fix\" href=\"#wait-mechanism-for-selectors\" id=\"wait-mechanism-for-selectors\"></a>Wait Mechanism for Selectors<a class=\"anchor-hash\" href=\"#wait-mechanism-for-selectors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>When TestCafe executes a <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors\">Selector</a> query, it waits for the target element to appear in the DOM. The query fails if it cannot find the target within the <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors#timeout\">Selector timeout</a>. The target element doesn’t have to be visible for the Selector to succeed.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://devexpress.github.io/testcafe/example`;\r\n\r\nconst nameInput = Selector(&#39;#developer-name&#39;);\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n\r\n    // Waits for &#39;#developer-name&#39; to appear in the DOM.\r\n    const nameInputElement = await nameInput();\r\n});\r\n</code></pre><p>If you enable the <a class=\"xref\" href=\"/documentation/402756/reference/test-api/selector/constructor#optionsvisibilitycheck\">visibilityCheck</a> Selector option, TestCafe limits the DOM search to visible elements.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://devexpress.github.io/testcafe/example`;\r\n\r\nconst nameInput = Selector(&#39;#developer-name&#39;);\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    // Waits for &#39;#developer-name&#39; to appear in the DOM and become visible.\r\n    const nameInputElement = await nameInput.with({ visibilityCheck: true })();\r\n});\r\n</code></pre><h2 id=\"wait-mechanism-for-actions__$\"><a class=\"anchor-fix\" href=\"#wait-mechanism-for-actions\" id=\"wait-mechanism-for-actions\"></a>Wait Mechanism for Actions<a class=\"anchor-hash\" href=\"#wait-mechanism-for-actions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Before TestCafe executes a <a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions\">page action</a>, it executes the <a href=\"#wait-mechanism-for-selectors\">Selector query</a> for that action’s target. If the action target does not become <strong>visible</strong> within the <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors#timeout\">selector timeout</a>, the test fails.</p>\r\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>The <a class=\"xref\" href=\"/documentation/402685/reference/test-api/testcontroller/setfilestoupload\">t.setFilesToUpload</a> and <a class=\"xref\" href=\"/documentation/402711/reference/test-api/testcontroller/clearupload\">t.clearUpload</a> actions do not require a visible target element.</p>\r\n</div>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://devexpress.github.io/testcafe/example`;\r\n\r\nconst nameInput    = Selector(&#39;#developer-name&#39;);\r\nconst submitButton = Selector(&#39;#submit-button&#39;);\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    await t\r\n        .typeText(nameInput, &#39;Peter Parker&#39;) // Waits for `#developer-name`\r\n        .click(submitButton);                // Waits for &#39;#submit-button&#39;\r\n});\r\n</code></pre><h3 id=\"treatment-of-overlapping-dom-elements__$\"><a class=\"anchor-fix\" href=\"#treatment-of-overlapping-dom-elements\" id=\"treatment-of-overlapping-dom-elements\"></a>Treatment of Overlapping DOM Elements<a class=\"anchor-hash\" href=\"#treatment-of-overlapping-dom-elements\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<ol>\r\n<li>When TestCafe interacts with a page element, it places the cursor in the <a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions#interaction-requirements\">center of the action target</a>.</li>\r\n<li>If another element overlaps the center of the action target, TestCafe initiates the <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors#timeout\">selector timeout</a>. </li>\r\n<li>TestCafe scans the target element for points that other elements do not overlap.</li>\r\n<li>If the selector timeout ends before TestCafe finds an unobstructed point, TestCafe interacts with the topmost element at the center of the original target.</li>\r\n</ol>\r\n<p>If another element overlaps the action target, TestCafe waits for the action target to surface. If the element is still obstructed after the expiration of the <a class=\"xref\" href=\"/documentation/402829/guides/basic-guides/element-selectors#timeout\">selector timeout</a>, TestCafe interacts with the topmost element instead.</p>\r\n<p>Sometimes the <a class=\"xref\" href=\"/documentation/402710/reference/test-api/testcontroller/click\">offset</a> option can help you resolve issues with overlapping elements. The offset option controls the precise position of the cursor during test actions. You can specify the cursor offset for following actions: <a class=\"xref\" href=\"/documentation/402710/reference/test-api/testcontroller/click\">click</a>, <a class=\"xref\" href=\"/documentation/402697/reference/test-api/testcontroller/hover\">hover</a>, and <a class=\"xref\" href=\"/documentation/402705/reference/test-api/testcontroller/drag\">drag</a>.</p>\r\n<ul>\r\n<li>A positive offset value moves the cursor in relation to the top border (the Y axis offset) or the left border (the X axis offset) of the element.</li>\r\n<li>A negative offset value moves the cursor in relation to the bottom border (the Y axis offset) or the right border (the X axis offset)  of the element.</li>\r\n</ul>\r\n<p>The following <code>.click()</code> method targets the bottom-left corner of the <code>box_behind</code> element:</p>\r\n<pre><code class=\"lang-js\">await t\r\n    .click(box_behind, { offsetX: 1, offsetY: -1 });\r\n</code></pre><h2 id=\"wait-mechanism-for-assertions__$\"><a class=\"anchor-fix\" href=\"#wait-mechanism-for-assertions\" id=\"wait-mechanism-for-assertions\"></a>Wait Mechanism for Assertions<a class=\"anchor-hash\" href=\"#wait-mechanism-for-assertions\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>Whenever an <a class=\"xref\" href=\"/documentation/402837/guides/basic-guides/assertions\">assertion</a> evaluates a <a class=\"xref\" href=\"/documentation/403654/recipes/basics/selector-recipes#examine-dom-elements-dom-node-snapshot\">selector property</a>\r\nor a <a class=\"xref\" href=\"/documentation/402832/guides/basic-guides/client-functions\">client function</a>, TestCafe activates the <a class=\"xref\" href=\"/documentation/402837/guides/basic-guides/assertions#smart-assertion-query-mechanism\">Smart Assertion Query Mechanism</a>.</p>\r\n<p>The Smart Assertion Query Mechanism <strong>does not</strong> wait for page elements to appear. It just repeats the evaluation process until the assertion yields a successful result, or the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--assertion-timeout-ms\">assertion timeout</a> expires.</p>\r\n<p>If you need to wait for an element before you execute an assertion, add another assertion that checks whether the element <a class=\"xref\" href=\"/documentation/402754/reference/test-api/selector/exists\">exists</a>, or <a class=\"xref\" href=\"/documentation/402755/reference/test-api/selector/count\">how many</a> elements of particular kind there are. </p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nfixture `My fixture`\r\n    .page `https://devexpress.github.io/testcafe/example`;\r\n\r\nconst nameInput = Selector(&#39;#developer-name&#39;);\r\nconst populate  = Selector(&#39;#populate&#39;);\r\n\r\ntest(&#39;My test&#39;, async t =&gt; {\r\n    await t\r\n        .setNativeDialogHandler(() =&gt; true)\r\n        .click(populate)\r\n\r\n        // Waits for the &#39;#developer-name&#39;\r\n        // element to appear in DOM.\r\n        .expect(nameInput.exists).ok()\r\n\r\n        // Keeps trying to obtain nameInput.value\r\n        // until it equals &#39;Peter Parker&#39;\r\n        // or the timeout passes.\r\n        .expect(nameInput.value).eql(&#39;Peter Parker&#39;);\r\n});\r\n</code></pre><h2 id=\"wait-mechanism-for-xhr-and-fetch-requests__$\"><a class=\"anchor-fix\" href=\"#wait-mechanism-for-xhr-and-fetch-requests\" id=\"wait-mechanism-for-xhr-and-fetch-requests\"></a>Wait Mechanism for XHR and Fetch Requests<a class=\"anchor-hash\" href=\"#wait-mechanism-for-xhr-and-fetch-requests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>TestCafe waits for XHR/fetch requests to resolve for the duration of the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#--ajax-request-timeout-ms\">AJAX request timeout</a>. The test continues even if the request doesn’t succeed within this timeout.</p>\r\n<p>The <code>--ajax-request-timeout</code> option controls the global value of the AJAX request timeout. </p>\r\n<p>If you want to control the timeout value on a case-by-case basis, add a<a class=\"xref\" href=\"/documentation/402756/reference/test-api/selector/constructor#optionstimeout\">selector</a> or an <a class=\"xref\" href=\"/documentation/402837/guides/basic-guides/assertions#assertion-timeout\">assertion</a> to your code, and adjust the timeout for that particular action.</p>\r\n<pre><code class=\"lang-js\">// The page should print &#39;No Data&#39; after the fetch request\r\nconst emptyLabel = Selector(&#39;p&#39;).withText(&#39;No Data&#39;).with({ visibilityCheck: true });\r\n\r\nawait t.click(&#39;#fetch-data&#39;);\r\n\r\n// Wait with an assertion.\r\nawait t.expect(emptyLabel.exists).ok(&#39;&#39;, { timeout: 10000 });\r\n\r\n// Wait with a selector.\r\nconst labelSnapshot = await emptyLabel.with({ timeout: 10000 });\r\n</code></pre><h2 id=\"wait-mechanism-for-redirects__$\"><a class=\"anchor-fix\" href=\"#wait-mechanism-for-redirects\" id=\"wait-mechanism-for-redirects\"></a>Wait Mechanism for Redirects<a class=\"anchor-hash\" href=\"#wait-mechanism-for-redirects\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<p>When an action triggers a redirect, TestCafe automatically waits for the server to respond.\r\nThe test continues if the server does not respond within <strong>15</strong> seconds.</p>\r\n","headers":[{"title":"Wait Mechanism for Selectors","tagName":"h2","id":"wait-mechanism-for-selectors","lvl":2},{"title":"Wait Mechanism for Actions","tagName":"h2","id":"wait-mechanism-for-actions","lvl":2},{"title":"Wait Mechanism for Assertions","tagName":"h2","id":"wait-mechanism-for-assertions","lvl":2},{"title":"Wait Mechanism for XHR and Fetch Requests","tagName":"h2","id":"wait-mechanism-for-xhr-and-fetch-requests","lvl":2},{"title":"Wait Mechanism for Redirects","tagName":"h2","id":"wait-mechanism-for-redirects","lvl":2}],"title":"Built-In Wait Mechanisms","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402827","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Bootstrap your TestCafe project with create-testcafe","id":"404259","url":"/documentation/404259/guides/best-practices/create-testcafe"}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Native Automation FAQ","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"}],"showLeafs":false},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Advanced Guides","id":"402634/Advanced Guides"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes},"redirectUrl":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},"__N_SSG":true}