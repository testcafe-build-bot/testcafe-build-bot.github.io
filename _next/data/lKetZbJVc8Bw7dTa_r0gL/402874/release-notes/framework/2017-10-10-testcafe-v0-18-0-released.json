{"pageProps":{"content":{"html":"        <h1>TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc</h1>\r\n\r\n<p>With this release, we have prepared a bunch of useful things. We have put finishing touches on Angular selectors to let you address page elements on Angular websites using the component tree. We have also made it possible to output reports to multiple channels (like console + file). Read on to learn about more things we have for you.</p>\r\n\r\n<h2 id=\"enhancements__$\"><a class=\"anchor-fix\" href=\"#enhancements\" id=\"enhancements\"></a>Enhancements<a class=\"anchor-hash\" href=\"#enhancements\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<h3 id=\"-angular-selectors-testcafe-angular-selectorshttpsgithubcomdevexpresstestcafe-angular-selectors__$\"><a class=\"anchor-fix\" href=\"#-angular-selectors-testcafe-angular-selectorshttpsgithubcomdevexpresstestcafe-angular-selectors\" id=\"-angular-selectors-testcafe-angular-selectorshttpsgithubcomdevexpresstestcafe-angular-selectors\"></a>⚙ Angular Selectors (<a href=\"https://github.com/DevExpress/testcafe-angular-selectors\" target=\"_blank\">testcafe-angular-selectors<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-angular-selectors-testcafe-angular-selectorshttpsgithubcomdevexpresstestcafe-angular-selectors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>In addition to AngularJS selectors we shipped earlier, we have prepared selectors for Angular 2+ websites.</p>\r\n<p>They are included in the same <code>testcafe-angular-selectors</code> module.</p>\r\n<pre><code class=\"lang-sh\">npm install testcafe-angular-selectors\r\n</code></pre><p>You can use Angular 2+ selectors as regular TestCafe selectors. When creating such a selector, provide the component name to the <code>AngularSelector</code> constructor. You can pass nested component names as well.</p>\r\n<pre><code class=\"lang-js\">import { AngularSelector } from &#39;testcafe-angular-selectors&#39;;\r\n\r\nconst listItemComponent = AngularSelector(&#39;list list-item&#39;);\r\n</code></pre><p>Note that before starting a test, you need to wait until the component tree is loaded. Use the <code>waitForAngular</code> function for this.</p>\r\n<pre><code class=\"lang-js\">import { AngularSelector, waitForAngular } from &#39;testcafe-angular-selectors&#39;;\r\n\r\nfixture `App tests`\r\n    .page `http://angular-app-url`\r\n    .beforeEach(async () =&gt; {\r\n        await waitForAngular();\r\n    });\r\n\r\ntest(&#39;test&#39;, async t =&gt; {\r\n    const firstListItem = AngularSelector(&#39;list list-item&#39;);\r\n});\r\n</code></pre><p>For details, see <a href=\"https://github.com/DevExpress/testcafe-angular-selectors/blob/master/angular-selector.md\" target=\"_blank\">Angular Selector Extentions<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>.</p>\r\n<h3 id=\"-testing-in-headless-firefox__$\"><a class=\"anchor-fix\" href=\"#-testing-in-headless-firefox\" id=\"-testing-in-headless-firefox\"></a>⚙ Testing in headless Firefox<a class=\"anchor-hash\" href=\"#-testing-in-headless-firefox\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>In addition to Chrome headless, we have added support for testing in headless Firefox (version 56+).</p>\r\n<pre><code class=\"lang-sh\">testcafe firefox:headless tests/sample-fixture.js\r\n</code></pre><pre><code class=\"lang-js\">runner\r\n    .src(&#39;tests/sample-fixture.js&#39;)\r\n    .browsers(&#39;firefox:headless&#39;)\r\n    .run();\r\n</code></pre><h3 id=\"-outputting-test-results-to-multiple-channels-1412httpsgithubcomdevexpresstestcafeissues1412__$\"><a class=\"anchor-fix\" href=\"#-outputting-test-results-to-multiple-channels-1412httpsgithubcomdevexpresstestcafeissues1412\" id=\"-outputting-test-results-to-multiple-channels-1412httpsgithubcomdevexpresstestcafeissues1412\"></a>⚙ Outputting test results to multiple channels (<a href=\"https://github.com/DevExpress/testcafe/issues/1412\" target=\"_blank\">#1412<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-outputting-test-results-to-multiple-channels-1412httpsgithubcomdevexpresstestcafeissues1412\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>If you need a report to be printed in the console and saved to a <code>.json</code> file,\r\nyou can now do this by specifying multiple reporters when running tests.</p>\r\n<pre><code class=\"lang-sh\">testcafe all tests/sample-fixture.js -r spec,json:report.json\r\n</code></pre><pre><code class=\"lang-js\">const stream = fs.createWriteStream(&#39;report.json&#39;);\r\n\r\nrunner\r\n    .src(&#39;tests/sample-fixture.js&#39;)\r\n    .browsers(&#39;chrome&#39;)\r\n    .reporter(&#39;spec&#39;)\r\n    .reporter(&#39;json&#39;, stream)\r\n    .run()\r\n    .then(failedCount =&gt; {\r\n        stream.end();\r\n    });\r\n</code></pre><h3 id=\"-entering-the-debug-mode-when-a-test-fails-1608httpsgithubcomdevexpresstestcafeissues1608__$\"><a class=\"anchor-fix\" href=\"#-entering-the-debug-mode-when-a-test-fails-1608httpsgithubcomdevexpresstestcafeissues1608\" id=\"-entering-the-debug-mode-when-a-test-fails-1608httpsgithubcomdevexpresstestcafeissues1608\"></a>⚙ Entering the debug mode when a test fails (<a href=\"https://github.com/DevExpress/testcafe/issues/1608\" target=\"_blank\">#1608<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-entering-the-debug-mode-when-a-test-fails-1608httpsgithubcomdevexpresstestcafeissues1608\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>TestCafe can now automatically switch to the debug mode whenever a test fails. Test execution will be paused, so that you can explore the tested page to determine the cause of the fail.</p>\r\n<p>To enable this behavior, use the <code>--debug-on-fail</code> flag in the command line or the <code>debugOnFail</code> option in the API.</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome tests/fixture.js --debug-on-fail\r\n</code></pre><pre><code class=\"lang-js\">runner.run({ debugOnFail: true });\r\n</code></pre><h3 id=\"-interacting-with-the-tested-page-in-debug-mode-1848httpsgithubcomdevexpresstestcafeissues1848__$\"><a class=\"anchor-fix\" href=\"#-interacting-with-the-tested-page-in-debug-mode-1848httpsgithubcomdevexpresstestcafeissues1848\" id=\"-interacting-with-the-tested-page-in-debug-mode-1848httpsgithubcomdevexpresstestcafeissues1848\"></a>⚙ Interacting with the tested page in debug mode (<a href=\"https://github.com/DevExpress/testcafe/issues/1848\" target=\"_blank\">#1848<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-interacting-with-the-tested-page-in-debug-mode-1848httpsgithubcomdevexpresstestcafeissues1848\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>When debugging your tests, you can now interact with the tested page. Click the <strong>Unlock page</strong> button in the page footer to enable interaction.</p>\r\n<p><img src=\"/images/unlock-page-button.png\" alt=\"Unlock page button\"></p>\r\n<p>After that, you can do anything with the webpage. This gives you additional powers to detect problems in your tests.</p>\r\n<p>Click <strong>Resume</strong> to continue running the test or click <strong>Next Step</strong> to step over.</p>\r\n<h3 id=\"-chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623httpsgithubcomdevexpresstestcafeissues1623__$\"><a class=\"anchor-fix\" href=\"#-chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623httpsgithubcomdevexpresstestcafeissues1623\" id=\"-chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623httpsgithubcomdevexpresstestcafeissues1623\"></a>⚙ Chrome and Firefox are opened with clean profiles by default (<a href=\"https://github.com/DevExpress/testcafe/issues/1623\" target=\"_blank\">#1623<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-chrome-and-firefox-are-opened-with-clean-profiles-by-default-1623httpsgithubcomdevexpresstestcafeissues1623\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>TestCafe now opens Chrome and Firefox with empty profiles to eliminate the influence of profile settings and extensions on test running.</p>\r\n<p>However, you can <strong>return to the previous behavior</strong> by using the <code>:userProfile</code> browser option.</p>\r\n<pre><code class=\"lang-sh\">testcafe firefox:userProfile tests/test.js\r\n</code></pre><pre><code class=\"lang-js\">runner\r\n    .src(&#39;tests/fixture1.js&#39;)\r\n    .browsers(&#39;firefox:userProfile&#39;)\r\n    .run();\r\n</code></pre><h3 id=\"-customizable-timeout-to-wait-for-the-windowload-event-1645httpsgithubcomdevexpresstestcafeissues1645__$\"><a class=\"anchor-fix\" href=\"#-customizable-timeout-to-wait-for-the-windowload-event-1645httpsgithubcomdevexpresstestcafeissues1645\" id=\"-customizable-timeout-to-wait-for-the-windowload-event-1645httpsgithubcomdevexpresstestcafeissues1645\"></a>⚙ Customizable timeout to wait for the <code>window.load</code> event (<a href=\"https://github.com/DevExpress/testcafe/issues/1645\" target=\"_blank\">#1645<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-customizable-timeout-to-wait-for-the-windowload-event-1645httpsgithubcomdevexpresstestcafeissues1645\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Previously, TestCafe started a test when the <code>DOMContentLoaded</code> event was raised. However, there are many pages that execute some kind of initialization code on the <code>window.load</code> event (which is raised after <code>DOMContentLoaded</code> because it waits for all stylesheets, images and subframes to load). In this instance, you need to wait for the <code>window.load</code> event to fire before running tests.</p>\r\n<p>With this release, TestCafe waits for the <code>window.load</code> event for <code>3</code> seconds.\r\nWe have also added a <code>pageLoadTimeout</code> setting that allows you to customize this interval.\r\nYou can set it to <code>0</code> to skip waiting for <code>window.load</code>.</p>\r\n<p>The following examples show how to use the <code>pageLoadTimeout</code> setting from the command line and API.</p>\r\n<pre><code class=\"lang-sh\">testcafe chrome test.js --page-load-timeout 0\r\n</code></pre><pre><code class=\"lang-js\">runner.run({\r\n    pageLoadTimeout: 0\r\n});\r\n</code></pre><p>You can also use the <code>setPageLoadTimeout</code> method in test API to set the timeout for an individual test.</p>\r\n<pre><code class=\"lang-js\">fixture `Page load timeout`\r\n    .page `http://devexpress.github.io/testcafe/example/`;\r\n\r\ntest(`Page load timeout`, async t =&gt; {\r\n    await t\r\n        .setPageLoadTimeout(0)\r\n        .navigateTo(&#39;http://devexpress.github.io/testcafe/&#39;);\r\n});\r\n</code></pre><h3 id=\"-access-messages-output-by-the-tested-app-to-the-browser-console-1738httpsgithubcomdevexpresstestcafeissues1738__$\"><a class=\"anchor-fix\" href=\"#-access-messages-output-by-the-tested-app-to-the-browser-console-1738httpsgithubcomdevexpresstestcafeissues1738\" id=\"-access-messages-output-by-the-tested-app-to-the-browser-console-1738httpsgithubcomdevexpresstestcafeissues1738\"></a>⚙ Access messages output by the tested app to the browser console (<a href=\"https://github.com/DevExpress/testcafe/issues/1738\" target=\"_blank\">#1738<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-access-messages-output-by-the-tested-app-to-the-browser-console-1738httpsgithubcomdevexpresstestcafeissues1738\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>You can now obtain messages that the tested app outputs to the browser console. This is useful if your application or the framework it uses posts errors, warnings or other informative messages into the console.</p>\r\n<p>Use the <code>t.getBrowserConsoleMessages</code> method that returns the following object.</p>\r\n<pre><code class=\"lang-js\">{\r\n    error: [&quot;Cannot access the &#39;db&#39; database. Wrong credentials.&quot;, &#39;...&#39;], // error messages\r\n    warn: [&#39;The setTimeout property is deprecated&#39;, &#39;...&#39;],                // warning messages\r\n    log: [&#39;[09:12:08] Logged in&#39;, &#39;[09:25:43] Changes saved&#39;, &#39;...&#39;],      // log messages\r\n    info: [&#39;The application was updated since your last visit.&#39;, &#39;...&#39;]    // info messages\r\n}\r\n</code></pre><p>Note that this method returns only messages posted via the <code>console.error</code>, <code>console.warn</code>, <code>console.log</code> and <code>console.info</code> methods. Messages output by the browser (like when an unhandled exception occurs on the page) will not be returned.</p>\r\n<p>For instance, consider the React’s typechecking feature, <a href=\"https://legacy.reactjs.org/docs/typechecking-with-proptypes.html\" target=\"_blank\">PropTypes<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>. You can use it to check that you assign valid values to the component’s props. If a <code>PropTypes</code> rule is violated, React posts an error into the JavaScript console.</p>\r\n<p>The following example shows how to check the React prop types for errors using the <code>t.getBrowserConsoleMessages</code> method.</p>\r\n<pre><code class=\"lang-js\">// check-prop-types.js\r\nimport { t } from &#39;testcafe&#39;;\r\n\r\nexport default async function () {\r\n    const { error } = await t.getBrowserConsoleMessages();\r\n\r\n    await t.expect(error[0]).notOk();\r\n}\r\n\r\n// test.js\r\nimport { Selector } from &#39;testcafe&#39;;\r\nimport checkPropTypes from &#39;./check-prop-types&#39;;\r\n\r\nfixture `react example`\r\n    .page `http://localhost:8080/`  // https://github.com/mzabriskie/react-example\r\n    .afterEach(() =&gt; checkPropTypes());\r\n\r\ntest(&#39;test&#39;, async t =&gt; {\r\n    await t\r\n        .typeText(Selector(&#39;.form-control&#39;), &#39;devexpress&#39;)\r\n        .click(Selector(&#39;button&#39;).withText(&#39;Go&#39;))\r\n        .click(Selector(&#39;h4&#39;).withText(&#39;Organizations&#39;));\r\n});\r\n</code></pre><h3 id=\"-defining-drag-end-point-on-the-destination-element-982httpsgithubcomdevexpresstestcafeissues982__$\"><a class=\"anchor-fix\" href=\"#-defining-drag-end-point-on-the-destination-element-982httpsgithubcomdevexpresstestcafeissues982\" id=\"-defining-drag-end-point-on-the-destination-element-982httpsgithubcomdevexpresstestcafeissues982\"></a>⚙ Defining drag end point on the destination element (<a href=\"https://github.com/DevExpress/testcafe/issues/982\" target=\"_blank\">#982<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-defining-drag-end-point-on-the-destination-element-982httpsgithubcomdevexpresstestcafeissues982\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>The <code>t.dragToElement</code> action can now drop a dragged element at any point inside the destination element.\r\nYou can specify the target point using the <code>destinationOffsetX</code> and <code>destinationOffsetY</code> options.</p>\r\n<pre><code class=\"lang-js\">import { Selector } from &#39;testcafe&#39;;\r\n\r\nconst fileIcon      = Selector(&#39;.file-icon&#39;);\r\nconst directoryPane = Selector(&#39;.directory&#39;);\r\n\r\nfixture `My Fixture`\r\n    .page `https://example.com/`;\r\n\r\ntest(&#39;My Test&#39;, async t =&gt; {\r\n    await t\r\n        .dragToElement(fileIcon, directoryPane, {\r\n            offsetX: 10,\r\n            offsetY: 10,\r\n            destinationOffsetX: 100,\r\n            destinationOffsetY: 50,\r\n            modifiers: {\r\n                shift: true\r\n            }\r\n        });\r\n});\r\n</code></pre><h3 id=\"-testcafe-exits-gracefully-when-the-process-is-interrupted-1378httpsgithubcomdevexpresstestcafeissues1378__$\"><a class=\"anchor-fix\" href=\"#-testcafe-exits-gracefully-when-the-process-is-interrupted-1378httpsgithubcomdevexpresstestcafeissues1378\" id=\"-testcafe-exits-gracefully-when-the-process-is-interrupted-1378httpsgithubcomdevexpresstestcafeissues1378\"></a>⚙ TestCafe exits gracefully when the process is interrupted (<a href=\"https://github.com/DevExpress/testcafe/issues/1378\" target=\"_blank\">#1378<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)<a class=\"anchor-hash\" href=\"#-testcafe-exits-gracefully-when-the-process-is-interrupted-1378httpsgithubcomdevexpresstestcafeissues1378\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\r\n<p>Previously, TestCafe left browsers open when you exited the process by pressing <code>Ctrl+C</code> in the terminal.\r\nNow TestCafe exits gracefully closing all browsers opened for testing.</p>\r\n<h2 id=\"bug-fixes__$\"><a class=\"anchor-fix\" href=\"#bug-fixes\" id=\"bug-fixes\"></a>Bug Fixes<a class=\"anchor-hash\" href=\"#bug-fixes\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\r\n<ul>\r\n<li>Tests no longer hang in Nightmare (<a href=\"https://github.com/DevExpress/testcafe/issues/1493\" target=\"_blank\">#1493<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)</li>\r\n<li>The <code>focus</code> event is now raised when clicking links with <code>tabIndex=&quot;0&quot;</code> (<a href=\"https://github.com/DevExpress/testcafe/issues/1803\" target=\"_blank\">#1803<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)</li>\r\n<li>Headless Chrome processes no longer hang after test runs (<a href=\"https://github.com/DevExpress/testcafe/issues/1826\" target=\"_blank\">#1826<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)</li>\r\n<li><code>setFilesToUpload</code> no longer throws a <code>RangeError</code> on websites that use Angular (<a href=\"https://github.com/DevExpress/testcafe/issues/1731\" target=\"_blank\">#1731<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)</li>\r\n<li>Fixed a bug where an <code>iframe</code> got wrong origin (<a href=\"https://github.com/DevExpress/testcafe/issues/1753\" target=\"_blank\">#1753<span class=\"svg-no-wrap\">&#65279;<svg fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg></span></a>)</li>\r\n<li><code>document.open</code> now doesn’t throw an error if <code>document.defaultView</code> is <code>null</code></li>\r\n<li>No error is thrown when the handler passed to <code>addEventListener</code> is <code>undefined</code></li>\r\n<li>An error is no longer raised if the processed element is not extendible</li>\r\n<li>Fixed a bug where an <code>onclick</code> handler did not work after click on a <code>Submit</code> button</li>\r\n<li>Images with <code>style = background-image: url(&quot;img.png&quot;);</code> are now loaded correctly</li>\r\n<li>Documents can now contain two <code>ShadowUI</code> roots</li>\r\n<li>HTML in an overridden <code>document.write</code> function is now processed correctly</li>\r\n<li>Elements processing now works for a <code>documentFragment</code> as it is added to the DOM</li>\r\n</ul>\r\n","headers":[{"title":"Enhancements","tagName":"h2","id":"enhancements","lvl":2},{"title":"Bug Fixes","tagName":"h2","id":"bug-fixes","lvl":2}],"title":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","schema":null,"author":null,"preview":"<p>With this release, we have prepared a bunch of useful things. We have put finishing touches on Angular selectors to let you address page elements on Angular websites using the component tree. We have also made it possible to output reports to multiple channels (like console + file). Read on to learn about more things we have for you.</p>","description":"With this release, we have prepared a bunch of useful things. We have put finishing touches on Angular selectors to let you address page elements on Angular web","published":"2017-10-10"},"topicUid":"402874","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Release Notes","id":"What's New/Release Notes","url":"/release-notes","href":"/release-notes"},{"name":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","id":"402874","url":"/402874/release-notes/framework/2017-10-10-testcafe-v0-18-0-released"}]},"sidebarNav":{"root":{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},"items":[{"name":"Release Notes","id":"What's New/Release Notes","url":"/release-notes","href":"/release-notes","items":[{"name":"Introducing TestCafe Testing Framework","id":"402864","url":"/402864/release-notes/framework/2016-10-17-introducing-testcafe-open-source-testing-framework"},{"name":"TestCafe v0.10.0 Released","id":"402865","url":"/402865/release-notes/framework/2016-11-8-testcafe-v0-10-0-released"},{"name":"TestCafe v0.11.0 Released","id":"402866","url":"/402866/release-notes/framework/2016-12-8-testcafe-v0-11-0-released"},{"name":"TestCafe v0.12.0 Released","id":"402867","url":"/402867/release-notes/framework/2017-1-19-testcafe-v0-12-0-released"},{"name":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","id":"402874","url":"/402874/release-notes/framework/2017-10-10-testcafe-v0-18-0-released"},{"name":"TestCafe v0.13.0 Released","id":"402868","url":"/402868/release-notes/framework/2017-2-16-testcafe-v0-13-0-released"},{"name":"TestCafe v0.14.0 Released","id":"402869","url":"/402869/release-notes/framework/2017-3-28-testcafe-v0-14-0-released"},{"name":"TestCafe v0.15.0 Released","id":"402870","url":"/402870/release-notes/framework/2017-4-26-testcafe-v0-15-0-released"},{"name":"TestCafe v0.16.0 Released","id":"402871","url":"/402871/release-notes/framework/2017-6-13-testcafe-v0-16-0-released"},{"name":"TestCafe v0.17.0 Released - Testing Electron Apps and Concurrent Test Execution","id":"402872","url":"/402872/release-notes/framework/2017-8-2-testcafe-v0-17-0-released"},{"name":"TestCafe v0.18.0-alpha1 Released - Testing in headless Firefox","id":"402873","url":"/402873/release-notes/framework/2017-9-29-testcafe-v0-18-0-alpha1-released"},{"name":"TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc","id":"402875","url":"/402875/release-notes/framework/2018-03-01-testcafe-v0-19-0-released"},{"name":"TestCafe v0.20.0 Released","id":"402876","url":"/402876/release-notes/framework/2018-05-15-testcafe-v0-20-0-released"},{"name":"TestCafe v0.21.0 Released","id":"402877","url":"/402877/release-notes/framework/2018-08-02-testcafe-v0-21-0-released"},{"name":"TestCafe v0.22.0 Released","id":"402878","url":"/402878/release-notes/framework/2018-09-03-testcafe-v0-22-0-released"},{"name":"TestCafe v0.23.0 Released","id":"402879","url":"/402879/release-notes/framework/2018-10-25-testcafe-v0-23-0-released"},{"name":"TestCafe v0.23.1 Released","id":"402880","url":"/402880/release-notes/framework/2018-11-7-testcafe-v0-23-1-released"},{"name":"TestCafe v1.6.0 Released","id":"402888","url":"/402888/release-notes/framework/2019-10-16-testcafe-v1-6-0-released"},{"name":"TestCafe v1.7.0 Released","id":"402889","url":"/402889/release-notes/framework/2019-11-21-testcafe-v1-7-0-released"},{"name":"TestCafe v1.1.0 Released","id":"402883","url":"/402883/release-notes/framework/2019-2-28-testcafe-v1-1-0-released"},{"name":"Migration from TestCafe v0.x.y to v1.0.0","id":"402881","url":"/402881/release-notes/framework/2019-2-7-migration-from-testcafe-v0-x-y-to-v1-0-0"},{"name":"TestCafe v1.0.0 Released","id":"402882","url":"/402882/release-notes/framework/2019-2-7-testcafe-v1-0-0-released"},{"name":"TestCafe v1.3.0 Released","id":"402884","url":"/402884/release-notes/framework/2019-7-2-testcafe-v1-3-0-released"},{"name":"TestCafe v1.3.1 Released","id":"402885","url":"/402885/release-notes/framework/2019-7-5-testcafe-v1-3-1-released"},{"name":"TestCafe v1.4.0 Released","id":"402886","url":"/402886/release-notes/framework/2019-8-7-testcafe-v1-4-0-released"},{"name":"TestCafe v1.5.0 Released","id":"402887","url":"/402887/release-notes/framework/2019-9-12-testcafe-v1-5-0-released"},{"name":"TestCafe v1.9.0 Released","id":"402891","url":"/402891/release-notes/framework/2020-08-06-testcafe-v1-9-0-released"},{"name":"TestCafe v1.8.0 Released","id":"402890","url":"/402890/release-notes/framework/2020-1-17-testcafe-v1-8-0-released"},{"name":"v1.10.0: New Compiler Options API, Resize and Screenshot Support for Child Windows","id":"402892","url":"/402892/release-notes/framework/2020-12-15-v1-10-0-new-compiler-options-api-resize-and-screenshot-support-for-child-windows"},{"name":"TestCafe v1.11.0 Released","id":"402964","url":"/402964/release-notes/framework/2021-2-15-testcafe-v1-11-0-released"},{"name":"TestCafe v1.12.0 Released","id":"402966","url":"/402966/release-notes/framework/2021-03-03-testcafe-v1-12-0-released"},{"name":"TestCafe v1.13.0 Released","id":"403063","url":"/403063/release-notes/framework/2021-3-22-testcafe-v1-13-0-released"},{"name":"TestCafe v1.14.0 Released","id":"403064","url":"/403064/release-notes/framework/2021-4-7-testcafe-v1-14-0-released"},{"name":"TestCafe v1.15.0 Released","id":"403220","url":"/403220/release-notes/framework/2021-7-8-testcafe-v1-15-0-released"},{"name":"TestCafe v1.16.0 Released","id":"403403","url":"/403403/release-notes/framework/2021-9-8-testcafe-v1-16-0-released"},{"name":"TestCafe v1.17.0 Released","id":"403546","url":"/403546/release-notes/framework/2021-10-2-testcafe-v1-17-0-released"},{"name":"TestCafe v1.18.0 Released","id":"403664","url":"/403664/release-notes/framework/2021-12-22-testcafe-v1-18-0-released"},{"name":"TestCafe v1.18.2 Released","id":"403713","url":"/403713/release-notes/framework/2022-01-18-testcafe-v-1-18-2-released"},{"name":"TestCafe v1.19.0 Released","id":"403938","url":"/403938/release-notes/framework/2022-05-26-testcafe-v1-19-0-released"},{"name":"TestCafe v1.20.0 Released","id":"404002","url":"/404002/release-notes/framework/2022-7-18-testcafe-v1-20-0-released"},{"name":"TestCafe v1.20.1 Released","id":"404029","url":"/404029/release-notes/framework/2022-8-8-testcafe-v-1-20-1-released"},{"name":"TestCafe v2.0.0 Released","id":"404018","url":"/404018/release-notes/framework/2022-8-31-testcafe-v2-0-0-released"},{"name":"TestCafe v2.1.0 Released","id":"404168","url":"/404168/release-notes/framework/2022-11-10-testcafe-v2-1-0-released"},{"name":"TestCafe v2.2.0 Released","id":"404236","url":"/404236/release-notes/framework/2022-12-29-testcafe-v2-2-0-released"},{"name":"TestCafe v2.3.0 Released","id":"404257","url":"/404257/release-notes/framework/2023-1-30-testcafe-v2-3-0-released"},{"name":"TestCafe v2.4.0 Released","id":"404319","url":"/404319/release-notes/framework/2023-3-7-testcafe-v2-4-0-released"},{"name":"TestCafe v2.5.0 Released","id":"404349","url":"/404349/release-notes/framework/2023-4-6-testcafe-v2-5-0-released"},{"name":"TestCafe v2.6.0 Released","id":"404399","url":"/404399/release-notes/framework/2023-5-11-testcafe-v2-6-0-released"},{"name":"TestCafe v2.6.1 Released","id":"404427","url":"/404427/release-notes/framework/2023-5-29-testcafe-v2-6-1-released"},{"name":"Introducing TestCafe v3.0.0","id":"404438","url":"/404438/release-notes/framework/2023-6-21-introducing-testcafe-v-3-0-0"},{"name":"TestCafe v3.1.0 Released","id":"404468","url":"/404468/release-notes/framework/2023-7-27-testcafe-v-3-1-0-released"},{"name":"TestCafe v3.2.0 Released","id":"404492","url":"/404492/release-notes/framework/2023-08-17-testcafe-v3-2-0-released"},{"name":"TestCafe v3.3.0 Released","id":"404515","url":"/404515/release-notes/framework/2023-08-29-testcafe-v3-3-0-released"}]},{"name":"Blog","id":"What's New/Blog","url":"/resources/team-blog","href":"/resources/team-blog","items":[{"name":"The Fastest Way to Your Next Test – TestCafe + TestCafe Studio - Q&As","id":"402902","url":"/402902/resources/blog/2020-09-24-the-fastest-way-to-your-next-test-qa"},{"name":"Upcoming Webinar: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402903","url":"/402903/resources/blog/2020-11-17-upcoming-webinar-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Client Functions and Script Injection for Page Interaction","id":"402908","url":"/402908/resources/blog/2020-11-18-client-functions-and-script-injection-for-page-interaction"},{"name":"Webinar Recording: How to Get True Cross-Browser Test Coverage with TestCafe and LambdaTest","id":"402906","url":"/402906/resources/blog/2020-12-11-webinar-recording-how-to-get-true-cross-browser-test-coverage-with-testcafe-and-lambdatest"},{"name":"Randomize Your End-to-End Tests: How to Generate Input Data for TestCafe","id":"402905","url":"/402905/resources/blog/2020-12-28-randomize-your-end-to-end-tests-how-to-generate-input-data-for-testcafe"},{"name":"How to Scroll Web Pages Using TestCafe","id":"402893","url":"/402893/resources/blog/2020-4-20-how-to-scroll-web-pages-using-testcafe"},{"name":"How to Debug Tests in TestCafe: Quick Guide","id":"402894","url":"/402894/resources/blog/2020-5-25-how-to-debug-tests-in-testcafe-quick-guide"},{"name":"How to Speed up Debugging in TestCafe: Tips and Tricks","id":"402895","url":"/402895/resources/blog/2020-6-30-how-to-speed-up-debugging-in-testcafe-tips-and-tricks"},{"name":"Upcoming Webinar: 10 Ways to Simplify Your UI Testing","id":"402896","url":"/402896/resources/blog/2020-7-14-10-ways-to-simplify-your-ui-testing"},{"name":"Introducing the TestCafe Jenkins Plugin","id":"402897","url":"/402897/resources/blog/2020-7-29-introducing-the-testcafe-jenkins-plugin"},{"name":"TestCafe Webinar - Your Questions Answered","id":"402898","url":"/402898/resources/blog/2020-8-19-testcafe-webinar-your-questions-answered"},{"name":"Upcoming Webinar: The Fastest Way to Your Next Test – TestCafe + TestCafe Studio","id":"402899","url":"/402899/resources/blog/2020-8-21-the-fastest-way-to-your-next-test"},{"name":"Introducing Multi-window Tests (Beta)","id":"402900","url":"/402900/resources/blog/2020-8-26-introducing-multi-window-tests-beta"},{"name":"How TestCafe Can Help You to Deliver Faster","id":"402901","url":"/402901/resources/blog/2020-9-3-how-testcafe-can-help-you-to-deliver-faster"},{"name":"Upcoming Roundtable: Modern Web Testing with TestCafe","id":"402904","url":"/402904/resources/blog/2021-2-9-modern-web-testing-with-testcafe"},{"name":"Nächste Woche: Deutscher Live-Stream zu TestCafe mit Gregor Biswanger","id":"403292","url":"/403292/resources/blog/2021-7-14-naechste-woche-deutscher-live-stream"},{"name":"Case study: How Medinas started deploying every day by using TestCafe","id":"403422","url":"/403422/resources/blog/2021-9-22-how-medinas-started-deploying-every-day"},{"name":"TestCafe Dashboard (Alpha): Be the First to Explore its Capabilities","id":"403442","url":"/403442/resources/blog/2021-10-7-dashboard-alpha-invitation-announce"},{"name":"Case study: How Neos CMS Increased Reliability and Confidence with E2E testing and TestCafe","id":"403571","url":"/403571/resources/blog/2021-11-17-how-neos-cms-increased-reliability-and-confidence-with-e2e-testing-and-testcafe"},{"name":"The 2022 TestCafe Survey: Let us know what you think!","id":"404008","url":"/404008/resources/blog/2022-7-12-2022-testcafe-survey-let-us-know-what-you-think"},{"name":"From TestCafe 1.0 to TestCafe 2.0: 11 Most Notable Enhancements","id":"404059","url":"/404059/resources/blog/2022-8-31-from-testcafe-10-to-testcafe-20-11-most-notable-enhancements"},{"name":"Case study: SurveyJS — Test-Driven Development with TestCafe","id":"404146","url":"/404146/resources/blog/2022-11-01-surveyjs-case-study"},{"name":"TestCafe Goes Native","id":"404431","url":"/404431/resources/blog/2023-6-21-testcafe-goes-native"}]},{"name":"Community Blogs","id":"What's New/Community Blogs","url":"/resources/community-blogs","href":"/resources/community-blogs"},{"name":"Courses","id":"What's New/Courses","url":"/resources/courses","href":"/resources/courses"},{"name":"Books","id":"What's New/Books","url":"/resources/books","href":"/resources/books"}],"activeItems":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Release Notes","id":"What's New/Release Notes","url":"/release-notes","href":"/release-notes"},{"name":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","id":"402874","url":"/402874/release-notes/framework/2017-10-10-testcafe-v0-18-0-released"}],"showLeafs":false},"breadcrumbsNav":[{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes"},{"name":"Release Notes","id":"What's New/Release Notes","url":"/release-notes","href":"/release-notes"},{"name":"TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc","id":"402874","url":"/402874/release-notes/framework/2017-10-10-testcafe-v0-18-0-released"}],"publishDates":{"teamBlog":[1687305600000,1667260800000,1661904000000,1657584000000,1637107200000,1633564800000,1632268800000,1626220800000,1612828800000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599091200000,1598400000000,1597968000000,1597795200000,1595980800000,1594684800000,1593475200000,1590364800000,1587340800000],"releaseNotes}},"__N_SSG":true}